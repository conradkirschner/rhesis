{
  "openapi": "3.1.0",
  "info": {
    "title": "Rhesis Backend",
    "description": "API for testing and evaluating AI models.\n\n## Version Information\n- **Version**: 0.1.0\n- **Branch**: 477-adding-pino-logger\n- **Commit**: 1a60ae5f\n\n## URL Encoding\nWhen using curl, special characters in URLs need to be URL-encoded. For example:\n- Encoded: `/tests/?%24filter=prompt_id%20eq%20'89905869-e8e9-4b2f-b362-3598cfe91968'`\n- Unencoded: `/tests/?$filter=prompt_id eq '89905869-e8e9-4b2f-b362-3598cfe91968'`\n\nThe `$` character must be encoded as `%24` when using curl.\nWeb browsers handle this automatically.\n",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://backend:8000"
    }
  ],
  "paths": {
    "/auth/login": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "Redirect users to Auth0 login page",
        "operationId": "login_auth_login_get",
        "parameters": [
          {
            "name": "connection",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Connection"
            }
          },
          {
            "name": "return_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/home",
              "title": "Return To"
            }
          }
        ],
        "responses": {
          "307": {
            "description": "Redirect to Auth0 login",
            "headers": {
              "Location": {
                "description": "Auth0 authorization URL",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Login error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server misconfiguration (e.g. AUTH0_DOMAIN missing)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/callback": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Auth Callback",
        "description": "Handle the Auth0 callback after successful authentication",
        "operationId": "auth_callback_auth_callback_get",
        "responses": {
          "307": {
            "description": "Redirect back to frontend with session token",
            "headers": {
              "Location": {
                "description": "Frontend URL including session token in query string",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Callback error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout",
        "description": "Log out the user and clear their session",
        "operationId": "logout_auth_logout_get",
        "parameters": [
          {
            "name": "post_logout",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Post Logout"
            }
          },
          {
            "name": "session_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Session Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "307": {
            "description": "Redirect to frontend root after logout",
            "headers": {
              "Location": {
                "description": "Frontend URL",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Verify Auth",
        "description": "Verify JWT session token and return user info",
        "operationId": "verify_auth_auth_verify_get",
        "parameters": [
          {
            "name": "session_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Token"
            }
          },
          {
            "name": "return_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/home",
              "title": "Return To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/demo": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Demo Redirect",
        "description": "Redirect to Auth0 login with demo user pre-filled",
        "operationId": "demo_redirect_auth_demo_get",
        "responses": {
          "307": {
            "description": "Redirect to Auth0 login with demo user pre-filled",
            "headers": {
              "Location": {
                "description": "Auth0 authorization URL",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "Demo redirect error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Server misconfiguration (e.g. AUTH0_DOMAIN missing)",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/behaviors/": {
      "post": {
        "tags": [
          "behaviors"
        ],
        "summary": "Create Behavior",
        "description": "Create behavior with automatic session variables for RLS.",
        "operationId": "create_behavior_behaviors__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BehaviorCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__BehaviorDetail__1"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "behaviors"
        ],
        "summary": "Read Behaviors",
        "description": "Get all behaviors with automatic session variables for RLS.",
        "operationId": "read_behaviors_behaviors__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__pagination__Paginated_BehaviorDetail___1"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/behaviors/{behavior_id}": {
      "get": {
        "tags": [
          "behaviors"
        ],
        "summary": "Read Behavior",
        "description": "Get behavior by ID with automatic session variables for RLS.",
        "operationId": "read_behavior_behaviors__behavior_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__BehaviorDetail__1"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "behaviors"
        ],
        "summary": "Delete Behavior",
        "description": "Delete behavior with automatic session variables for RLS.",
        "operationId": "delete_behavior_behaviors__behavior_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__BehaviorDetail__1"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "behaviors"
        ],
        "summary": "Update Behavior",
        "description": "Update behavior with automatic session variables for RLS.",
        "operationId": "update_behavior_behaviors__behavior_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BehaviorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__BehaviorDetail__1"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/behaviors/{behavior_id}/metrics/": {
      "get": {
        "tags": [
          "behaviors"
        ],
        "summary": "Read Behavior Metrics",
        "description": "Get all metrics associated with a behavior",
        "operationId": "read_behavior_metrics_behaviors__behavior_id__metrics__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__pagination__Paginated_MetricDetail___1"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/behaviors/{behavior_id}/metrics/{metric_id}": {
      "post": {
        "tags": [
          "behaviors"
        ],
        "summary": "Add Metric To Behavior",
        "description": "Add a metric to a behavior",
        "operationId": "add_metric_to_behavior_behaviors__behavior_id__metrics__metric_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Add Metric To Behavior Behaviors  Behavior Id  Metrics  Metric Id  Post"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "behaviors"
        ],
        "summary": "Remove Metric From Behavior",
        "description": "Remove a metric from a behavior",
        "operationId": "remove_metric_from_behavior_behaviors__behavior_id__metrics__metric_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          },
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Remove Metric From Behavior Behaviors  Behavior Id  Metrics  Metric Id  Delete"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/categories/": {
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Create Category",
        "description": "Create category with optimized approach supporting both RLS and explicit parameters.\n\nPerformance improvements:\n- Automatically sets PostgreSQL session variables for RLS policies\n- Maintains explicit parameter passing for maximum compatibility\n- Single database connection with optimized session variable caching\n- Drop-in replacement requiring minimal code changes",
        "operationId": "create_category_categories__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Read Categories",
        "description": "Get all categories with their related objects",
        "operationId": "read_categories_categories__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          },
          {
            "name": "entity_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter categories by entity type",
              "title": "Entity Type"
            },
            "description": "Filter categories by entity type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_CategoryDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{category_id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Read Category",
        "description": "Get category with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during retrieval\n- Direct tenant context injection",
        "operationId": "read_category_categories__category_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update Category",
        "description": "Update category with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_category_categories__category_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Delete Category",
        "description": "Delete category with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during deletion\n- Direct tenant context injection",
        "operationId": "delete_category_categories__category_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/comments/": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create Comment",
        "description": "Create comment with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_comment_comments__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Read Comments",
        "description": "Get all comments with filtering and pagination - optimized approach.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- Direct tenant context injection",
        "operationId": "read_comments_comments__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDetail"
                  },
                  "title": "Response Read Comments Comments  Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{comment_id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Read Comment",
        "description": "Get comment with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during retrieval\n- Direct tenant context injection",
        "operationId": "read_comment_comments__comment_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Update Comment",
        "description": "Update comment with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_comment_comments__comment_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Delete Comment",
        "description": "Delete comment with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during deletion\n- Direct tenant context injection",
        "operationId": "delete_comment_comments__comment_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/comments/entity/{entity_type}/{entity_id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Read Comments By Entity",
        "description": "Get all comments for a specific entity - optimized approach.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- Direct tenant context injection\n\nSupported entities: Test, TestSet, TestRun, TestResult, PromptTemplate,\nMetric, Model, Prompt, Behavior, Category, Source",
        "operationId": "read_comments_by_entity_comments_entity__entity_type___entity_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Type"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Entity Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDetail"
                  },
                  "title": "Response Read Comments By Entity Comments Entity  Entity Type   Entity Id  Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/comments/{comment_id}/emoji/{emoji}": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Add Emoji Reaction",
        "description": "## Emoji Reactions Structure\n\nEmoji reactions are stored as JSON in the `emojis` field of each comment.\nThe structure is: {emoji_character: [list_of_user_reactions]}\n\n### Example Comment Response:\n```json\n{\n  \"id\": \"uuid\",\n  \"content\": \"Great work on this test!\",\n  \"emojis\": {\n    \"\ud83d\ude80\": [\n      {\"user_id\": \"user-uuid-1\", \"user_name\": \"John Doe\"},\n      {\"user_id\": \"user-uuid-2\", \"user_name\": \"Jane Smith\"}\n    ],\n    \"\ud83d\udc4d\": [\n      {\"user_id\": \"user-uuid-3\", \"user_name\": \"Bob Wilson\"}\n    ]\n  },\n  \"entity_id\": \"test-uuid\",\n  \"entity_type\": \"Test\",\n  \"user_id\": \"author-uuid\",\n  \"organization_id\": \"org-uuid\",\n  \"created_at\": \"2024-01-01T12:00:00Z\",\n  \"updated_at\": \"2024-01-01T12:00:00Z\"\n}\n```\n\n### Key Points:\n- **Emoji Character**: The emoji itself (\ud83d\ude80, \ud83d\udc4d, \u2764\ufe0f) is the dictionary key\n- **User Reactions**: Each emoji maps to a list of users who reacted\n- **User Data**: Each reaction includes `user_id` and `user_name`\n- **No Duplicates**: A user can only react once per emoji per comment",
        "operationId": "add_emoji_reaction_comments__comment_id__emoji__emoji__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "emoji",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Emoji"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Remove Emoji Reaction",
        "description": "Remove an emoji reaction from a comment - optimized approach.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- Direct tenant context injection",
        "operationId": "remove_emoji_reaction_comments__comment_id__emoji__emoji__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "emoji",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Emoji"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/demographics/": {
      "post": {
        "tags": [
          "demographics"
        ],
        "summary": "Create Demographic",
        "description": "Create demographic with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_demographic_demographics__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DemographicCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "demographics"
        ],
        "summary": "Read Demographics",
        "description": "Get all demographics with their related objects",
        "operationId": "read_demographics_demographics__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Demographic_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/demographics/{demographic_id}": {
      "get": {
        "tags": [
          "demographics"
        ],
        "summary": "Read Demographic",
        "operationId": "read_demographic_demographics__demographic_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "demographic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Demographic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "demographics"
        ],
        "summary": "Delete Demographic",
        "operationId": "delete_demographic_demographics__demographic_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "demographic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Demographic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "demographics"
        ],
        "summary": "Update Demographic",
        "description": "Update demographic with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_demographic_demographics__demographic_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "demographic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Demographic Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DemographicUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dimensions/": {
      "post": {
        "tags": [
          "dimensions"
        ],
        "summary": "Create Dimension",
        "description": "Create dimension with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_dimension_dimensions__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "dimensions"
        ],
        "summary": "Read Dimensions",
        "description": "Get all dimensions with their related objects",
        "operationId": "read_dimensions_dimensions__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Dimension_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/dimensions/{dimension_id}": {
      "get": {
        "tags": [
          "dimensions"
        ],
        "summary": "Read Dimension",
        "operationId": "read_dimension_dimensions__dimension_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dimension_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dimension Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dimensions"
        ],
        "summary": "Delete Dimension",
        "operationId": "delete_dimension_dimensions__dimension_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dimension_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dimension Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "dimensions"
        ],
        "summary": "Update Dimension",
        "operationId": "update_dimension_dimensions__dimension_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "dimension_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dimension Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dimension"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/endpoints/": {
      "post": {
        "tags": [
          "endpoints"
        ],
        "summary": "Create Endpoint",
        "description": "Create endpoint with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_endpoint_endpoints__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoint"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "Read Endpoints",
        "description": "Get all endpoints with their related objects",
        "operationId": "read_endpoints_endpoints__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_EndpointDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/endpoints/{endpoint_id}": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "Read Endpoint",
        "operationId": "read_endpoint_endpoints__endpoint_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "endpoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Endpoint Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "endpoints"
        ],
        "summary": "Delete Endpoint",
        "operationId": "delete_endpoint_endpoints__endpoint_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "endpoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Endpoint Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoint"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "endpoints"
        ],
        "summary": "Update Endpoint",
        "operationId": "update_endpoint_endpoints__endpoint_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "endpoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Endpoint Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoint"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/endpoints/{endpoint_id}/invoke": {
      "post": {
        "tags": [
          "endpoints"
        ],
        "summary": "Invoke Endpoint",
        "description": "Invoke an endpoint with the given input data.\n\nArgs:\n    endpoint_id: The UUID of the endpoint to invoke\n    input_data: Dictionary containing input data for the endpoint\n    db: Database session\n    endpoint_service: The endpoint service instance\n\nReturns:\n    The response from the endpoint, either mapped or raw depending on endpoint configuration",
        "operationId": "invoke_endpoint_endpoints__endpoint_id__invoke_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "endpoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Endpoint Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "title": "Input Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Json-Output"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/endpoints/schema": {
      "get": {
        "tags": [
          "endpoints"
        ],
        "summary": "Get Endpoint Schema",
        "description": "Get the endpoint schema definition.\n\nArgs:\n    endpoint_service: The endpoint service instance\n\nReturns:\n    Dict containing the input and output schema definitions",
        "operationId": "get_endpoint_schema_endpoints_schema_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Output"
                  },
                  "type": "object",
                  "title": "Response Get Endpoint Schema Endpoints Schema Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/home/": {
      "get": {
        "tags": [
          "home"
        ],
        "summary": "Home",
        "operationId": "home_home__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomePublicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/home/protected": {
      "get": {
        "tags": [
          "home"
        ],
        "summary": "Protected",
        "operationId": "protected_home_protected_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeProtectedResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/metrics/": {
      "post": {
        "tags": [
          "metrics"
        ],
        "summary": "Create Metric",
        "description": "Create metric with super optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_metric_metrics__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Read Metrics",
        "description": "Get all metrics with their related objects",
        "operationId": "read_metrics_metrics__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__pagination__Paginated_MetricDetail___2"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metric_id}": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Read Metric",
        "description": "Get a specific metric by ID with its related objects",
        "operationId": "read_metric_metrics__metric_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__MetricDetail__2"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "metrics"
        ],
        "summary": "Update Metric",
        "description": "Update a metric",
        "operationId": "update_metric_metrics__metric_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "metrics"
        ],
        "summary": "Delete Metric",
        "description": "Delete a metric",
        "operationId": "delete_metric_metrics__metric_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metric_id}/behaviors/{behavior_id}": {
      "post": {
        "tags": [
          "metrics"
        ],
        "summary": "Add Behavior To Metric",
        "description": "Add a behavior to a metric",
        "operationId": "add_behavior_to_metric_metrics__metric_id__behaviors__behavior_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          },
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "metrics"
        ],
        "summary": "Remove Behavior From Metric",
        "description": "Remove a behavior from a metric",
        "operationId": "remove_behavior_from_metric_metrics__metric_id__behaviors__behavior_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          },
          {
            "name": "behavior_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Behavior Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics/{metric_id}/behaviors/": {
      "get": {
        "tags": [
          "metrics"
        ],
        "summary": "Read Metric Behaviors",
        "description": "Get all behaviors associated with a metric",
        "operationId": "read_metric_behaviors_metrics__metric_id__behaviors__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "metric_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Metric Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__pagination__Paginated_BehaviorDetail___2"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/models/": {
      "post": {
        "tags": [
          "models"
        ],
        "summary": "Create Model",
        "description": "Create model with super optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_model_models__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Read Models",
        "description": "Get all models with their related objects",
        "operationId": "read_models_models__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_ModelDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Read Model",
        "description": "Get a specific model by ID",
        "operationId": "read_model_models__model_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "models"
        ],
        "summary": "Update Model",
        "description": "Update model with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_model_models__model_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "models"
        ],
        "summary": "Delete Model",
        "description": "Delete a model",
        "operationId": "delete_model_models__model_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/test": {
      "post": {
        "tags": [
          "models"
        ],
        "summary": "Test Model Connection",
        "description": "Test the connection to the model's endpoint",
        "operationId": "test_model_connection_models__model_id__test_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestConnectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Create Organization",
        "operationId": "create_organization_organizations__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Read Organizations",
        "description": "Get all organizations with their related objects",
        "operationId": "read_organizations_organizations__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Organization_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Read Organization",
        "operationId": "read_organization_organizations__organization_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Delete Organization",
        "operationId": "delete_organization_organizations__organization_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "organizations"
        ],
        "summary": "Update Organization",
        "operationId": "update_organization_organizations__organization_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/load-initial-data": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Initialize Organization Data",
        "description": "Load initial data for an organization if onboarding is not complete.",
        "operationId": "initialize_organization_data_organizations__organization_id__load_initial_data_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/rollback-initial-data": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Rollback Organization Data",
        "description": "Rollback initial data for an organization.",
        "operationId": "rollback_organization_data_organizations__organization_id__rollback_initial_data_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusMessageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Project",
        "description": "Create project with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_project_projects__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Read Projects",
        "description": "Get all projects with their related objects",
        "operationId": "read_projects_projects__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_ProjectDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Read Project",
        "description": "Get project with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during retrieval\n- Direct tenant context injection",
        "operationId": "read_project_projects__project_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Update Project",
        "description": "Update project with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_project_projects__project_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Delete Project",
        "description": "Delete project with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during deletion\n- Direct tenant context injection",
        "operationId": "delete_project_projects__project_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/prompt_templates/": {
      "post": {
        "tags": [
          "prompt_templates"
        ],
        "summary": "Create Prompt Template",
        "description": "Create prompt template with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_prompt_template_prompt_templates__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptTemplateCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "prompt_templates"
        ],
        "summary": "Read Prompt Templates",
        "description": "Get all prompt templates with their related objects",
        "operationId": "read_prompt_templates_prompt_templates__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_PromptTemplate_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/prompt_templates/{prompt_template_id}": {
      "get": {
        "tags": [
          "prompt_templates"
        ],
        "summary": "Read Prompt Template",
        "operationId": "read_prompt_template_prompt_templates__prompt_template_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "prompt_templates"
        ],
        "summary": "Delete Prompt Template",
        "operationId": "delete_prompt_template_prompt_templates__prompt_template_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "prompt_templates"
        ],
        "summary": "Update Prompt Template",
        "operationId": "update_prompt_template_prompt_templates__prompt_template_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromptTemplate"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/prompts/": {
      "post": {
        "tags": [
          "prompts"
        ],
        "summary": "Create Prompt",
        "description": "Create prompt with super optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_prompt_prompts__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "Read Prompts",
        "description": "Get all prompts with their related objects",
        "operationId": "read_prompts_prompts__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Prompt_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/prompts/{prompt_id}": {
      "get": {
        "tags": [
          "prompts"
        ],
        "summary": "Read Prompt",
        "operationId": "read_prompt_prompts__prompt_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "prompts"
        ],
        "summary": "Update Prompt",
        "description": "Update a prompt",
        "operationId": "update_prompt_prompts__prompt_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "prompts"
        ],
        "summary": "Delete Prompt",
        "description": "Delete a prompt",
        "operationId": "delete_prompt_prompts__prompt_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Prompt Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prompt"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recycle/models": {
      "get": {
        "tags": [
          "recycle"
        ],
        "summary": "List Available Models",
        "description": "List all available models that can be managed (admin only).\n\nReturns:\n    List of model names and their details",
        "operationId": "list_available_models_recycle_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListModelsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/recycle/{model_name}": {
      "get": {
        "tags": [
          "recycle"
        ],
        "summary": "Get Recycled Records",
        "description": "Get soft-deleted records in the recycle bin for a specific model (admin only).\n\nArgs:\n    model_name: Name of the model (e.g., 'user', 'test', 'project')\n    skip: Number of records to skip\n    limit: Maximum number of records to return\n    organization_id: Optional organization filter\n\nReturns:\n    List of soft-deleted records",
        "operationId": "get_recycled_records_recycle__model_name__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organization",
              "title": "Organization Id"
            },
            "description": "Filter by organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecycledRecordsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recycle/{model_name}/{item_id}/restore": {
      "post": {
        "tags": [
          "recycle"
        ],
        "summary": "Restore From Recycle Bin",
        "description": "Restore a soft-deleted record from the recycle bin (admin only).\n\nArgs:\n    model_name: Name of the model\n    item_id: ID of the record to restore\n    organization_id: Optional organization context\n\nReturns:\n    Restored record",
        "operationId": "restore_from_recycle_bin_recycle__model_name___item_id__restore_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organization context",
              "title": "Organization Id"
            },
            "description": "Organization context"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recycle/{model_name}/{item_id}": {
      "delete": {
        "tags": [
          "recycle"
        ],
        "summary": "Permanently Delete Record",
        "description": "Permanently delete a record from the recycle bin (admin only).\n\nWARNING: This action cannot be undone! The record will be permanently\nremoved from the database.\n\nArgs:\n    model_name: Name of the model\n    item_id: ID of the record to delete\n    confirm: Must be true to confirm permanent deletion\n    organization_id: Optional organization context\n\nReturns:\n    Success message",
        "operationId": "permanently_delete_record_recycle__model_name___item_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "confirm",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Must be true to confirm deletion",
              "default": false,
              "title": "Confirm"
            },
            "description": "Must be true to confirm deletion"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organization context",
              "title": "Organization Id"
            },
            "description": "Organization context"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermanentlyDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recycle/stats/counts": {
      "get": {
        "tags": [
          "recycle"
        ],
        "summary": "Get Recycle Bin Counts",
        "description": "Get counts of soft-deleted records in the recycle bin for all models (admin only).\n\nThis can take a while for large databases as it queries every table.\n\nArgs:\n    organization_id: Optional organization filter\n\nReturns:\n    Dictionary with counts per model",
        "operationId": "get_recycle_bin_counts_recycle_stats_counts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organization",
              "title": "Organization Id"
            },
            "description": "Filter by organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecycleBinCountsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recycle/bulk-restore/{model_name}": {
      "post": {
        "tags": [
          "recycle"
        ],
        "summary": "Bulk Restore From Recycle Bin",
        "description": "Restore multiple soft-deleted records from the recycle bin at once (admin only).\n\nArgs:\n    model_name: Name of the model\n    item_ids: List of IDs to restore\n    organization_id: Optional organization context\n\nReturns:\n    Summary of restoration results",
        "operationId": "bulk_restore_from_recycle_bin_recycle_bulk_restore__model_name__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organization context",
              "title": "Organization Id"
            },
            "description": "Organization context"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": "Item Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkRestoreResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/recycle/empty/{model_name}": {
      "delete": {
        "tags": [
          "recycle"
        ],
        "summary": "Empty Recycle Bin For Model",
        "description": "Empty the recycle bin for a specific model - permanently delete ALL soft-deleted records (admin only).\n\nWARNING: This action cannot be undone! All soft-deleted records will be\npermanently removed from the database.\n\nArgs:\n    model_name: Name of the model\n    confirm: Must be true to confirm permanent deletion\n    organization_id: Optional organization filter (only delete from this org)\n\nReturns:\n    Count of permanently deleted records",
        "operationId": "empty_recycle_bin_for_model_recycle_empty__model_name__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Name"
            }
          },
          {
            "name": "confirm",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Must be true to confirm",
              "default": false,
              "title": "Confirm"
            },
            "description": "Must be true to confirm"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional organization filter",
              "title": "Organization Id"
            },
            "description": "Optional organization filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyRecycleBinResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/response_patterns/": {
      "post": {
        "tags": [
          "response_patterns"
        ],
        "summary": "Create Response Pattern",
        "description": "Create response pattern with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_response_pattern_response_patterns__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsePatternCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePattern"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "response_patterns"
        ],
        "summary": "Read Response Patterns",
        "description": "Get all response patterns with their related objects",
        "operationId": "read_response_patterns_response_patterns__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_ResponsePattern_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/response_patterns/{response_pattern_id}": {
      "get": {
        "tags": [
          "response_patterns"
        ],
        "summary": "Read Response Pattern",
        "operationId": "read_response_pattern_response_patterns__response_pattern_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response_pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Response Pattern Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePattern"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "response_patterns"
        ],
        "summary": "Update Response Pattern",
        "operationId": "update_response_pattern_response_patterns__response_pattern_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response_pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Response Pattern Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponsePatternUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePattern"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "response_patterns"
        ],
        "summary": "Delete Response Pattern",
        "operationId": "delete_response_pattern_response_patterns__response_pattern_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "response_pattern_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Response Pattern Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePattern"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/risks/": {
      "post": {
        "tags": [
          "risks"
        ],
        "summary": "Create Risk",
        "description": "Create risk with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_risk_risks__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Risk"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Read Risks",
        "description": "Get all risks with their related objects",
        "operationId": "read_risks_risks__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Risk_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/risks/{risk_id}": {
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Read Risk",
        "operationId": "read_risk_risks__risk_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Risk Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Risk"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "risks"
        ],
        "summary": "Delete Risk",
        "operationId": "delete_risk_risks__risk_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Risk Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Risk"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "risks"
        ],
        "summary": "Update Risk",
        "description": "Update risk with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_risk_risks__risk_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Risk Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Risk"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/services/github/contents": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Get Github Contents",
        "description": "Get the contents of a GitHub repository.",
        "operationId": "get_github_contents_services_github_contents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "repo_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Github Contents Services Github Contents Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/services/openai/json": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Get Ai Json Response",
        "description": "Get a JSON response from the LLM (SSE if `stream=True`).",
        "operationId": "get_ai_json_response_services_openai_json_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Json-Output"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "example": "data: {\"key\":\"value\"}\\n\\n"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/openai/chat": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Get Ai Chat Response",
        "description": "Chat endpoint:\n  - SSE stream when `stream=True`\n  - JSON shape (LLM-structured) OR TextResponse when not streaming",
        "operationId": "get_ai_chat_response_services_openai_chat_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TextResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Json-Output"
                    }
                  ],
                  "title": "Response Get Ai Chat Response Services Openai Chat Post"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "example": "data: {\"choices\":[...] }\\n\\n"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/chat/completions": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Create Chat Completion Endpoint",
        "description": "OpenAI-compatible Chat Completions API (SSE if `stream=True`).",
        "operationId": "create_chat_completion_endpoint_services_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Json-Output"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "example": "data: {\"id\":\"cmpl_...\"}\\n\\n"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/generate/content": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Generate Content Endpoint",
        "description": "Generate text using the LLM; if `schema_` is provided, returns validated JSON.",
        "operationId": "generate_content_endpoint_services_generate_content_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateContentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TextResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Json-Output"
                    }
                  ],
                  "title": "Response Generate Content Endpoint Services Generate Content Post"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/generate/tests": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Generate Tests Endpoint",
        "description": "Generate test cases using the prompt synthesizer.",
        "operationId": "generate_tests_endpoint_services_generate_tests_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTestsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTestsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/generate/text": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Generate Text",
        "description": "Generate raw text from a prompt:\n  - SSE stream when `stream=True`\n  - TextResponse JSON otherwise",
        "operationId": "generate_text_services_generate_text_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextResponse"
                }
              },
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "example": "data: partial token\\n\\n"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/documents/upload": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Upload Document",
        "operationId": "upload_document_services_documents_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_services_documents_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentUploadResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/documents/extract": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Extract Document Content",
        "description": "Extract text content from an uploaded document.",
        "operationId": "extract_document_content_services_documents_extract_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractDocumentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractDocumentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/services/generate/test_config": {
      "post": {
        "tags": [
          "services"
        ],
        "summary": "Generate Test Config",
        "description": "Generate test configuration JSON based on user description.",
        "operationId": "generate_test_config_services_generate_test_config_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/sources/": {
      "post": {
        "tags": [
          "sources"
        ],
        "summary": "Create Source",
        "description": "Create source with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_source_sources__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sources"
        ],
        "summary": "Read Sources",
        "description": "Get all sources with their related objects",
        "operationId": "read_sources_sources__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Source_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sources/{source_id}": {
      "get": {
        "tags": [
          "sources"
        ],
        "summary": "Read Source",
        "description": "Get source with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during retrieval\n- Direct tenant context injection",
        "operationId": "read_source_sources__source_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sources"
        ],
        "summary": "Delete Source",
        "description": "Delete source with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during deletion\n- Direct tenant context injection",
        "operationId": "delete_source_sources__source_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sources"
        ],
        "summary": "Update Source",
        "description": "Update source with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_source_sources__source_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "source_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Source Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/statuses/": {
      "post": {
        "tags": [
          "statuses"
        ],
        "summary": "Create Status",
        "description": "Create status with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_status_statuses__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "statuses"
        ],
        "summary": "Read Statuses",
        "description": "Get all statuses with their related objects",
        "operationId": "read_statuses_statuses__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          },
          {
            "name": "entity_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter statuses by entity type",
              "title": "Entity Type"
            },
            "description": "Filter statuses by entity type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_StatusDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/statuses/{status_id}": {
      "get": {
        "tags": [
          "statuses"
        ],
        "summary": "Read Status",
        "description": "Get status with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during retrieval\n- Direct tenant context injection",
        "operationId": "read_status_statuses__status_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "statuses"
        ],
        "summary": "Delete Status",
        "description": "Delete status with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during deletion\n- Direct tenant context injection",
        "operationId": "delete_status_statuses__status_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "statuses"
        ],
        "summary": "Update Status",
        "description": "Update status with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_status_statuses__status_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Status Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/": {
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Create Tag",
        "description": "Create tag with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_tag_tags__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Read Tags",
        "description": "Get all tags with their related objects",
        "operationId": "read_tags_tags__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_Tag_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{tag_id}": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Read Tag",
        "description": "Get tag with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during retrieval\n- Direct tenant context injection",
        "operationId": "read_tag_tags__tag_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "Delete Tag",
        "description": "Delete tag with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during deletion\n- Direct tenant context injection",
        "operationId": "delete_tag_tags__tag_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tags"
        ],
        "summary": "Update Tag",
        "description": "Update tag with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_tag_tags__tag_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{entity_type}/{entity_id}": {
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "Assign Tag To Entity",
        "description": "Assign a tag to a specific entity",
        "operationId": "assign_tag_to_entity_tags__entity_type___entity_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Entity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{entity_type}/{entity_id}/{tag_id}": {
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "Remove Tag From Entity",
        "description": "Remove a tag from a specific entity",
        "operationId": "remove_tag_from_entity_tags__entity_type___entity_id___tag_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Entity Id"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Remove Tag From Entity Tags  Entity Type   Entity Id   Tag Id  Delete"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create Task",
        "description": "Create a new task",
        "operationId": "create_task_tasks__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "List Tasks",
        "description": "List tasks with filtering, sorting, and comment counts",
        "operationId": "list_tasks_tasks__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TaskDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get Task",
        "description": "Get a single task by ID",
        "operationId": "get_task_tasks__task_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tasks"
        ],
        "summary": "Update Task",
        "description": "Update a task",
        "operationId": "update_task_tasks__task_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete Task",
        "description": "Delete a task",
        "operationId": "delete_task_tasks__task_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Delete Task Tasks  Task Id  Delete"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{entity_type}/{entity_id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get Tasks By Entity",
        "description": "Get tasks by entity type and entity ID",
        "operationId": "get_tasks_by_entity_tasks__entity_type___entity_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "entity_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Type"
            }
          },
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Entity Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TaskDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test-contexts/": {
      "post": {
        "tags": [
          "test contexts"
        ],
        "summary": "Create Test Context",
        "description": "Create test context with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_test_context_test_contexts__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestContextCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestContext"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "test contexts"
        ],
        "summary": "Read Test Contexts",
        "description": "Get all test contexts or filter by test_id",
        "operationId": "read_test_contexts_test_contexts__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "test_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Test Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TestContext_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test-contexts/{test_context_id}": {
      "get": {
        "tags": [
          "test contexts"
        ],
        "summary": "Read Test Context",
        "description": "Get a specific test context by ID",
        "operationId": "read_test_context_test_contexts__test_context_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_context_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Context Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestContext"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "test contexts"
        ],
        "summary": "Update Test Context",
        "description": "Update test_context with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_test_context_test_contexts__test_context_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_context_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Context Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestContextUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestContext"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "test contexts"
        ],
        "summary": "Delete Test Context",
        "description": "Delete a test context",
        "operationId": "delete_test_context_test_contexts__test_context_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_context_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Context Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestContext"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_configurations/": {
      "post": {
        "tags": [
          "test_configurations"
        ],
        "summary": "Create Test Configuration",
        "description": "Create test configuration with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_test_configuration_test_configurations__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestConfigurationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "test_configurations"
        ],
        "summary": "Read Test Configurations",
        "description": "Get all test configurations with their related objects",
        "operationId": "read_test_configurations_test_configurations__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TestConfigurationDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_configurations/{test_configuration_id}": {
      "get": {
        "tags": [
          "test_configurations"
        ],
        "summary": "Read Test Configuration",
        "description": "Get a specific test configuration by ID with its related objects",
        "operationId": "read_test_configuration_test_configurations__test_configuration_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_configuration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Configuration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestConfigurationDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "test_configurations"
        ],
        "summary": "Update Test Configuration",
        "description": "Update test_configuration with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_test_configuration_test_configurations__test_configuration_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_configuration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Configuration Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestConfigurationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "test_configurations"
        ],
        "summary": "Delete Test Configuration",
        "description": "Delete a test configuration",
        "operationId": "delete_test_configuration_test_configurations__test_configuration_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_configuration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Configuration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestConfiguration"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_configurations/{test_configuration_id}/execute": {
      "post": {
        "tags": [
          "test_configurations"
        ],
        "summary": "Execute Test Configuration Endpoint",
        "description": "Execute a test configuration by running its test set.",
        "operationId": "execute_test_configuration_endpoint_test_configurations__test_configuration_id__execute_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_configuration_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Configuration Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteTestConfigurationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_results/": {
      "post": {
        "tags": [
          "test_results"
        ],
        "summary": "Create Test Result",
        "description": "Create test result with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_test_result_test_results__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "test_results"
        ],
        "summary": "Read Test Results",
        "description": "Get all test results",
        "operationId": "read_test_results_test_results__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TestResultDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_results/stats": {
      "get": {
        "tags": [
          "test_results"
        ],
        "summary": "Generate Test Result Stats",
        "description": "Get test result statistics with configurable data modes for optimal performance\n\n## Available Modes\n\n### Performance-Optimized Modes (recommended for specific use cases):\n\n**`summary`** - Ultra-lightweight (~5% of full data size)\n- Returns: `overall_pass_rates` + `metadata`\n- Use case: Dashboard widgets, quick overviews\n- Response time: ~50ms\n\n**`metrics`** - Individual metric analysis (~20% of full data size)\n- Returns: `metric_pass_rates` + `metadata`\n- Contains: Pass/fail rates for Answer Fluency, Answer Relevancy, Contextual Recall, etc.\n- Use case: Metric-focused charts, AI model performance analysis\n\n**`behavior`** - Test behavior analysis (~15% of full data size)\n- Returns: `behavior_pass_rates` + `metadata`\n- Contains: Pass/fail rates grouped by test behavior (Factual Accuracy, Reasoning, etc.)\n- Use case: Behavior performance charts, test strategy optimization\n\n**`category`** - Test category analysis (~15% of full data size)\n- Returns: `category_pass_rates` + `metadata`\n- Contains: Pass/fail rates grouped by test category (RAG Systems, Chatbots, etc.)\n- Use case: Category performance comparison, domain-specific analysis\n\n**`topic`** - Test topic analysis (~15% of full data size)\n- Returns: `topic_pass_rates` + `metadata`\n- Contains: Pass/fail rates grouped by topic (Healthcare, Finance, Technology, etc.)\n- Use case: Topic performance insights, domain expertise evaluation\n\n**`overall`** - High-level overview (~10% of full data size)\n- Returns: `overall_pass_rates` + `metadata`\n- Contains: Aggregate pass/fail rates (test passes only if ALL metrics pass)\n- Use case: Executive dashboards, KPI tracking\n\n**`timeline`** - Trend analysis (~40% of full data size)\n- Returns: `timeline` + `metadata`\n- Contains: Monthly pass/fail rates over time with metric breakdowns\n- Use case: Trend charts, historical analysis, progress tracking\n\n**`test_runs`** - Test run comparison (~30% of full data size)\n- Returns: `test_run_summary` + `metadata`\n- Contains: Pass/fail rates grouped by individual test runs\n- Use case: Test run comparison, execution analysis\n\n### Complete Dataset Mode:\n\n**`all`** - Complete dataset (default, full data size)\n- Returns: All sections above combined\n- Use case: Comprehensive dashboards, full analytics\n- Response time: ~200-500ms depending on data volume",
        "operationId": "generate_test_result_stats_test_results_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TestResultStatsMode",
              "description": "Data mode: 'summary' (lightweight), 'metrics' (individual metrics), 'behavior/category/topic' (dimensional), 'timeline' (trends), 'test_runs' (by run), 'overall' (aggregate), 'all' (complete)",
              "default": "all"
            },
            "description": "Data mode: 'summary' (lightweight), 'metrics' (individual metrics), 'behavior/category/topic' (dimensional), 'timeline' (trends), 'test_runs' (by run), 'overall' (aggregate), 'all' (complete)"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Max items per dimension (e.g., top 10 behaviors)",
              "title": "Top"
            },
            "description": "Max items per dimension (e.g., top 10 behaviors)"
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Months of historical data to include (default: 6)",
              "default": 6,
              "title": "Months"
            },
            "description": "Months of historical data to include (default: 6)"
          },
          {
            "name": "test_run_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific test run UUID (legacy, use test_run_ids for multiple)",
              "title": "Test Run Id"
            },
            "description": "Filter by specific test run UUID (legacy, use test_run_ids for multiple)"
          },
          {
            "name": "test_set_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test set IDs",
              "title": "Test Set Ids"
            },
            "description": "Filter by test set IDs"
          },
          {
            "name": "behavior_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by behavior IDs",
              "title": "Behavior Ids"
            },
            "description": "Filter by behavior IDs"
          },
          {
            "name": "category_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category IDs",
              "title": "Category Ids"
            },
            "description": "Filter by category IDs"
          },
          {
            "name": "topic_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by topic IDs",
              "title": "Topic Ids"
            },
            "description": "Filter by topic IDs"
          },
          {
            "name": "status_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test status IDs",
              "title": "Status Ids"
            },
            "description": "Filter by test status IDs"
          },
          {
            "name": "test_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific test IDs",
              "title": "Test Ids"
            },
            "description": "Filter by specific test IDs"
          },
          {
            "name": "test_type_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test type IDs",
              "title": "Test Type Ids"
            },
            "description": "Filter by test type IDs"
          },
          {
            "name": "test_run_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by multiple test run IDs",
              "title": "Test Run Ids"
            },
            "description": "Filter by multiple test run IDs"
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test creator user IDs",
              "title": "User Ids"
            },
            "description": "Filter by test creator user IDs"
          },
          {
            "name": "assignee_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by assignee user IDs",
              "title": "Assignee Ids"
            },
            "description": "Filter by assignee user IDs"
          },
          {
            "name": "owner_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test owner user IDs",
              "title": "Owner Ids"
            },
            "description": "Filter by test owner user IDs"
          },
          {
            "name": "prompt_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by prompt IDs",
              "title": "Prompt Ids"
            },
            "description": "Filter by prompt IDs"
          },
          {
            "name": "priority_min",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum priority level (inclusive)",
              "title": "Priority Min"
            },
            "description": "Minimum priority level (inclusive)"
          },
          {
            "name": "priority_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum priority level (inclusive)",
              "title": "Priority Max"
            },
            "description": "Maximum priority level (inclusive)"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by tags (tests must have all specified tags)",
              "title": "Tags"
            },
            "description": "Filter by tags (tests must have all specified tags)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (ISO format, overrides months parameter)",
              "title": "Start Date"
            },
            "description": "Start date (ISO format, overrides months parameter)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (ISO format, overrides months parameter)",
              "title": "End Date"
            },
            "description": "End date (ISO format, overrides months parameter)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TestResultStatsAll"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsSummary"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsMetrics"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsBehavior"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsCategory"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsTopic"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsOverall"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsTimeline"
                    },
                    {
                      "$ref": "#/components/schemas/TestResultStatsTestRuns"
                    }
                  ],
                  "title": "Response Generate Test Result Stats Test Results Stats Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_results/{test_result_id}": {
      "get": {
        "tags": [
          "test_results"
        ],
        "summary": "Read Test Result",
        "description": "Get a specific test result by ID",
        "operationId": "read_test_result_test_results__test_result_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Result Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResultDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "test_results"
        ],
        "summary": "Update Test Result",
        "description": "Update test_result with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_test_result_test_results__test_result_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "test_results"
        ],
        "summary": "Delete Test Result",
        "description": "Delete a test result",
        "operationId": "delete_test_result_test_results__test_result_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Result Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_runs/": {
      "post": {
        "tags": [
          "test_runs"
        ],
        "summary": "Create Test Run",
        "description": "Create test run with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_test_run_test_runs__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRunCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestRun"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "test_runs"
        ],
        "summary": "Read Test Runs",
        "description": "Get all test runs with their related objects",
        "operationId": "read_test_runs_test_runs__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TestRunDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_runs/stats": {
      "get": {
        "tags": [
          "test_runs"
        ],
        "summary": "Generate Test Run Stats",
        "description": "Get test run statistics with configurable data modes for optimal performance\n\n(See docstring in source for full details)",
        "operationId": "generate_test_run_stats_test_runs_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TestRunStatsMode",
              "description": "Data mode: 'summary' (lightweight), 'status' (status distribution), 'results' (result distribution), 'test_sets' (most run test sets), 'executors' (top executors), 'timeline' (trends), 'all' (complete)",
              "default": "all"
            },
            "description": "Data mode: 'summary' (lightweight), 'status' (status distribution), 'results' (result distribution), 'test_sets' (most run test sets), 'executors' (top executors), 'timeline' (trends), 'all' (complete)"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Max items per dimension (e.g., top 10 executors)",
              "title": "Top"
            },
            "description": "Max items per dimension (e.g., top 10 executors)"
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Months of historical data to include (default: 6)",
              "default": 6,
              "title": "Months"
            },
            "description": "Months of historical data to include (default: 6)"
          },
          {
            "name": "test_run_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by specific test run IDs",
              "title": "Test Run Ids"
            },
            "description": "Filter by specific test run IDs"
          },
          {
            "name": "user_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by executor user IDs",
              "title": "User Ids"
            },
            "description": "Filter by executor user IDs"
          },
          {
            "name": "endpoint_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by endpoint IDs",
              "title": "Endpoint Ids"
            },
            "description": "Filter by endpoint IDs"
          },
          {
            "name": "test_set_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test set IDs",
              "title": "Test Set Ids"
            },
            "description": "Filter by test set IDs"
          },
          {
            "name": "status_list",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by test run statuses",
              "title": "Status List"
            },
            "description": "Filter by test run statuses"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (ISO format, overrides months parameter)",
              "title": "Start Date"
            },
            "description": "Start date (ISO format, overrides months parameter)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (ISO format, overrides months parameter)",
              "title": "End Date"
            },
            "description": "End date (ISO format, overrides months parameter)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TestRunStatsAll"
                    },
                    {
                      "$ref": "#/components/schemas/TestRunStatsSummary"
                    },
                    {
                      "$ref": "#/components/schemas/TestRunStatsStatus"
                    },
                    {
                      "$ref": "#/components/schemas/TestRunStatsResults"
                    },
                    {
                      "$ref": "#/components/schemas/TestRunStatsTests"
                    },
                    {
                      "$ref": "#/components/schemas/TestRunStatsExecutors"
                    },
                    {
                      "$ref": "#/components/schemas/TestRunStatsTimeline"
                    }
                  ],
                  "title": "Response Generate Test Run Stats Test Runs Stats Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_runs/{test_run_id}": {
      "get": {
        "tags": [
          "test_runs"
        ],
        "summary": "Read Test Run",
        "description": "Get a specific test run by ID with its related objects",
        "operationId": "read_test_run_test_runs__test_run_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestRunDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "test_runs"
        ],
        "summary": "Update Test Run",
        "description": "Update test_run with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_test_run_test_runs__test_run_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestRunUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestRun"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "test_runs"
        ],
        "summary": "Delete Test Run",
        "description": "Delete a test run",
        "operationId": "delete_test_run_test_runs__test_run_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestRun"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_runs/{test_run_id}/behaviors": {
      "get": {
        "tags": [
          "test_runs"
        ],
        "summary": "Get Test Run Behaviors",
        "description": "Get behaviors that have test results for this test run with organization filtering",
        "operationId": "get_test_run_behaviors_test_runs__test_run_id__behaviors_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Behavior"
                  },
                  "title": "Response Get Test Run Behaviors Test Runs  Test Run Id  Behaviors Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_runs/{test_run_id}/download": {
      "get": {
        "tags": [
          "test_runs"
        ],
        "summary": "Download Test Run Results",
        "description": "Download test run results as CSV",
        "operationId": "download_test_run_results_test_runs__test_run_id__download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/generate": {
      "post": {
        "tags": [
          "test_sets"
        ],
        "summary": "Generate Test Set",
        "operationId": "generate_test_set_test_sets_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSetGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetGenerationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/test_sets/bulk": {
      "post": {
        "tags": [
          "test_sets"
        ],
        "summary": "Create Test Set Bulk",
        "operationId": "create_test_set_bulk_test_sets_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSetBulkCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetBulkResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/test_sets/": {
      "post": {
        "tags": [
          "test_sets"
        ],
        "summary": "Create Test Set",
        "operationId": "create_test_set_test_sets__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSetCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSet"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Read Test Sets",
        "operationId": "read_test_sets_test_sets__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          },
          {
            "name": "has_runs",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter test sets by whether they have test runs",
              "title": "Has Runs"
            },
            "description": "Filter test sets by whether they have test runs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TestSetDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/stats": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Generate Test Set Stats",
        "operationId": "generate_test_set_stats_test_sets_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Top"
            }
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 6,
              "title": "Months"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatsMode",
              "default": "entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityStats"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Read Test Set",
        "operationId": "read_test_set_test_sets__test_set_identifier__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_id}": {
      "delete": {
        "tags": [
          "test_sets"
        ],
        "summary": "Delete Test Set",
        "operationId": "delete_test_set_test_sets__test_set_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Set Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSet"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "test_sets"
        ],
        "summary": "Update Test Set",
        "operationId": "update_test_set_test_sets__test_set_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Set Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSet"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}/download": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Download Test Set Prompts",
        "operationId": "download_test_set_prompts_test_sets__test_set_identifier__download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV export of prompts in the test set",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}/prompts/download": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Download Test Set Prompts Csv",
        "operationId": "download_test_set_prompts_csv_test_sets__test_set_identifier__prompts_download_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CSV export of prompts in the test set",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}/prompts": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Get Test Set Prompts",
        "operationId": "get_test_set_prompts_test_sets__test_set_identifier__prompts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromptView"
                  },
                  "title": "Response Get Test Set Prompts Test Sets  Test Set Identifier  Prompts Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}/tests": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Get Test Set Tests",
        "operationId": "get_test_set_tests_test_sets__test_set_identifier__tests_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Order By"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TestDetail"
                  },
                  "title": "Response Get Test Set Tests Test Sets  Test Set Identifier  Tests Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}/execute/{endpoint_id}": {
      "post": {
        "tags": [
          "test_sets"
        ],
        "summary": "Execute Test Set",
        "description": "Submit a test set for execution against an endpoint.",
        "operationId": "execute_test_set_test_sets__test_set_identifier__execute__endpoint_id__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          },
          {
            "name": "endpoint_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Endpoint Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/TestSetExecutionRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Test Configuration Attributes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetExecutionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_identifier}/stats": {
      "get": {
        "tags": [
          "test_sets"
        ],
        "summary": "Generate Test Set Test Stats",
        "operationId": "generate_test_set_test_stats_test_sets__test_set_identifier__stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Set Identifier"
            }
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Top"
            }
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 6,
              "title": "Months"
            }
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StatsMode",
              "default": "entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityStats"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_id}/associate": {
      "post": {
        "tags": [
          "test_sets"
        ],
        "summary": "Associate Tests With Test Set",
        "operationId": "associate_tests_with_test_set_test_sets__test_set_id__associate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Set Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSetBulkAssociateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetBulkAssociateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/test_sets/{test_set_id}/disassociate": {
      "post": {
        "tags": [
          "test_sets"
        ],
        "summary": "Disassociate Tests From Test Set",
        "operationId": "disassociate_tests_from_test_set_test_sets__test_set_id__disassociate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Set Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestSetBulkDisassociateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetBulkDisassociateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Create Test",
        "description": "Create test with super optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during entity creation\n- Direct tenant context injection",
        "operationId": "create_test_tests__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__Test"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Read Tests",
        "description": "Get all tests with their related objects",
        "operationId": "read_tests_tests__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TestDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/bulk": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Create Tests Bulk",
        "description": "Create multiple tests in a single operation.\n\nThe input format should be:\n{\n    \"tests\": [\n        {\n            \"prompt\": {\n                \"content\": \"Prompt text\",\n                \"language_code\": \"en\",\n                \"demographic\": \"Optional demographic\",\n                \"dimension\": \"Optional dimension\",\n                \"expected_response\": \"Optional expected response\"\n            },\n            \"behavior\": \"Behavior name\",\n            \"category\": \"Category name\",\n            \"topic\": \"Topic name\",\n            \"test_configuration\": {},  # Optional test configuration\n            \"assignee_id\": \"uuid\",  # Optional assignee ID\n            \"owner_id\": \"uuid\",  # Optional owner ID\n            \"status\": \"string\",    # Optional status name\n            \"priority\": \"number\"   # Optional priority value\n        }\n    ],\n    \"test_set_id\": \"optional-uuid\"  # Optional test set ID to associate tests with\n}\n\nReturns:\n    200: Tests created successfully\n    400: Invalid request format or validation error\n    404: Referenced entity not found\n    500: Server error during processing",
        "operationId": "create_tests_bulk_tests_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestBulkCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestBulkCreateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/tests/stats": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Generate Test Stats",
        "description": "Get statistics about tests",
        "operationId": "generate_test_stats_tests_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Top"
            }
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 6,
              "title": "Months"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityStats"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/{test_id}/stats": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Individual Test Statistics",
        "description": "Get comprehensive statistics for a specific test across all its test runs.\n\nProvides:\n- Overall pass/fail statistics\n- Per-metric breakdown of success rates\n- Recent test run details with per-metric results\n- Average execution time\n\nQuery Parameters:\n- recent_runs_limit: Number of recent test runs to include (default: 5)\n- months: Filter to last N months of data (optional)\n- start_date: Custom start date in ISO format (optional, overrides months)\n- end_date: Custom end date in ISO format (optional, overrides months)\n\nExample usage:\n- GET /tests/{test_id}/stats\n- GET /tests/{test_id}/stats?recent_runs_limit=10\n- GET /tests/{test_id}/stats?months=3\n- GET /tests/{test_id}/stats?start_date=2024-01-01&end_date=2024-12-31",
        "operationId": "get_individual_test_statistics_tests__test_id__stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Id"
            }
          },
          {
            "name": "recent_runs_limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of recent test runs to include",
              "default": 5,
              "title": "Recent Runs Limit"
            },
            "description": "Number of recent test runs to include"
          },
          {
            "name": "months",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to last N months of data",
              "title": "Months"
            },
            "description": "Filter to last N months of data"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date (ISO format, overrides months)",
              "title": "Start Date"
            },
            "description": "Start date (ISO format, overrides months)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date (ISO format, overrides months)",
              "title": "End Date"
            },
            "description": "End date (ISO format, overrides months)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestStats"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/{test_id}": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Read Test",
        "description": "Get a specific test by ID with its related objects",
        "operationId": "read_test_tests__test_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestDetail"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tests"
        ],
        "summary": "Update Test",
        "description": "Update test with optimized approach - no session variables needed.\n\nPerformance improvements:\n- Completely bypasses database session variables\n- No SET LOCAL commands needed\n- No SHOW queries during update\n- Direct tenant context injection",
        "operationId": "update_test_tests__test_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__Test"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tests"
        ],
        "summary": "Delete Test",
        "description": "Delete a test",
        "operationId": "delete_test_tests__test_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Test Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__Test"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Create Token",
        "description": "Create a new API token for the current user.",
        "operationId": "create_token_tokens__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenCreateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCreateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "Read Tokens",
        "description": "List all active API tokens for the current user.",
        "operationId": "read_tokens_tokens__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TokenRead_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/{token_id}": {
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "Read Token",
        "description": "Get a specific token by ID.",
        "operationId": "read_token_tokens__token_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRead"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tokens"
        ],
        "summary": "Delete Token",
        "description": "Revoke (delete) a token.",
        "operationId": "delete_token_tokens__token_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRead"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tokens"
        ],
        "summary": "Update Token",
        "description": "Update token metadata (e.g., name or expiry).",
        "operationId": "update_token_tokens__token_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRead"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tokens/{token_id}/refresh": {
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Refresh Token",
        "description": "Refresh a token with a new value (rotate the secret) and optional new expiration.",
        "operationId": "refresh_token_tokens__token_id__refresh_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCreateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/topics/": {
      "post": {
        "tags": [
          "topics"
        ],
        "summary": "Create Topic",
        "description": "Create topic with optimized approach - no session variables needed.",
        "operationId": "create_topic_topics__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Read Topics",
        "description": "Get all topics with their related objects",
        "operationId": "read_topics_topics__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          },
          {
            "name": "entity_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter topics by entity type",
              "title": "Entity Type"
            },
            "description": "Filter topics by entity type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TopicDetail_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/topics/{topic_id}": {
      "get": {
        "tags": [
          "topics"
        ],
        "summary": "Read Topic",
        "description": "Get a single topic by ID.",
        "operationId": "read_topic_topics__topic_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Topic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "topics"
        ],
        "summary": "Delete Topic",
        "description": "Delete a topic.",
        "operationId": "delete_topic_topics__topic_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Topic Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "topics"
        ],
        "summary": "Update Topic",
        "description": "Update topic with optimized approach - no session variables needed.",
        "operationId": "update_topic_topics__topic_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "topic_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Topic Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topic"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/type_lookups/": {
      "post": {
        "tags": [
          "type_lookups"
        ],
        "summary": "Create Type Lookup",
        "description": "Create type lookup with optimized approach - no session variables needed.",
        "operationId": "create_type_lookup_type_lookups__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeLookupCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeLookup"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "type_lookups"
        ],
        "summary": "Read Type Lookups",
        "description": "Get all type lookups with their related objects",
        "operationId": "read_type_lookups_type_lookups__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_TypeLookup_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/type_lookups/{type_lookup_id}": {
      "get": {
        "tags": [
          "type_lookups"
        ],
        "summary": "Read Type Lookup",
        "description": "Get a single type lookup by ID with tenant scoping.",
        "operationId": "read_type_lookup_type_lookups__type_lookup_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type_lookup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Type Lookup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeLookup"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "type_lookups"
        ],
        "summary": "Delete Type Lookup",
        "description": "Delete a type lookup with tenant scoping.",
        "operationId": "delete_type_lookup_type_lookups__type_lookup_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type_lookup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Type Lookup Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeLookup"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "type_lookups"
        ],
        "summary": "Update Type Lookup",
        "description": "Update a type lookup with tenant scoping.",
        "operationId": "update_type_lookup_type_lookups__type_lookup_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "type_lookup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Type Lookup Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeLookupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypeLookup"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/use_cases/": {
      "post": {
        "tags": [
          "use_cases"
        ],
        "summary": "Create Use Case",
        "description": "Create use case with optimized approach - no session variables needed.",
        "operationId": "create_use_case_use_cases__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UseCaseCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UseCase"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "use_cases"
        ],
        "summary": "Read Use Cases",
        "description": "Get all use cases with their related objects",
        "operationId": "read_use_cases_use_cases__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_UseCase_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/use_cases/{use_case_id}": {
      "get": {
        "tags": [
          "use_cases"
        ],
        "summary": "Read Use Case",
        "description": "Get a single use case by ID with tenant scoping.",
        "operationId": "read_use_case_use_cases__use_case_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "use_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Use Case Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UseCase"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "use_cases"
        ],
        "summary": "Delete Use Case",
        "description": "Delete a use case with tenant scoping.",
        "operationId": "delete_use_case_use_cases__use_case_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "use_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Use Case Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UseCase"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "use_cases"
        ],
        "summary": "Update Use Case",
        "description": "Update a use case with tenant scoping.",
        "operationId": "update_use_case_use_cases__use_case_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "use_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Use Case Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UseCaseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UseCase"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Invite or create a user within the current user's organization.\n- If a user with the same email exists but has no organization, re-invite (re-attach) them.\n- If they belong to another organization, return 409.",
        "operationId": "create_user_users__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read Users",
        "description": "Get all users for the tenant with filtering and paging.",
        "operationId": "read_users_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "title": "Sort Order"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "OData filter expression",
              "title": "$Filter"
            },
            "description": "OData filter expression"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_User_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read User",
        "description": "Get a specific user by ID (tenant-scoped).",
        "operationId": "read_user_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete User",
        "description": "Delete a user (superusers only, tenant-scoped).",
        "operationId": "delete_user_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "description": "Update a user profile. If the current user updates their own profile, include a new session token.\n\nReturns:\n    UserUpdateResponse: {\"user\": User, \"session_token\": str | None}",
        "operationId": "update_user_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/leave-organization": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Leave Organization",
        "description": "Allow the current user to leave their organization (sets organization_id to NULL).",
        "operationId": "leave_organization_users_leave_organization_patch",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Welcome endpoint with API status",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "internal"
        ],
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIUsage": {
        "properties": {
          "filtering": {
            "$ref": "#/components/schemas/APIUsageFiltering"
          }
        },
        "type": "object",
        "required": [
          "filtering"
        ],
        "title": "APIUsage"
      },
      "APIUsageFiltering": {
        "properties": {
          "note": {
            "type": "string",
            "title": "Note"
          },
          "example": {
            "$ref": "#/components/schemas/APIUsageFilteringExample"
          }
        },
        "type": "object",
        "required": [
          "note",
          "example"
        ],
        "title": "APIUsageFiltering"
      },
      "APIUsageFilteringExample": {
        "properties": {
          "encoded": {
            "type": "string",
            "title": "Encoded"
          },
          "unencoded": {
            "type": "string",
            "title": "Unencoded"
          },
          "note": {
            "type": "string",
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "encoded",
          "unencoded",
          "note"
        ],
        "title": "APIUsageFilteringExample"
      },
      "ActionResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "ActionResponse"
      },
      "ApiKeyAuth": {
        "properties": {
          "type": {
            "type": "string",
            "const": "api_key",
            "title": "Type"
          },
          "location": {
            "type": "string",
            "enum": [
              "header",
              "query",
              "cookie"
            ],
            "title": "Location",
            "default": "header"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "ApiKeyAuth"
      },
      "AuthLinks": {
        "properties": {
          "login": {
            "type": "string",
            "title": "Login"
          },
          "callback": {
            "type": "string",
            "title": "Callback"
          },
          "logout": {
            "type": "string",
            "title": "Logout"
          }
        },
        "type": "object",
        "required": [
          "login",
          "callback",
          "logout"
        ],
        "title": "AuthLinks"
      },
      "BasicAuth": {
        "properties": {
          "type": {
            "type": "string",
            "const": "basic",
            "title": "Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "username",
          "password"
        ],
        "title": "BasicAuth"
      },
      "BearerAuth": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bearer",
            "title": "Type"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "BearerAuth"
      },
      "Behavior": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Behavior"
      },
      "BehaviorCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "BehaviorCreate"
      },
      "BehaviorReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "BehaviorReference"
      },
      "BehaviorUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "BehaviorUpdate"
      },
      "Body_upload_document_services_documents_upload_post": {
        "properties": {
          "document": {
            "type": "string",
            "format": "binary",
            "title": "Document"
          }
        },
        "type": "object",
        "required": [
          "document"
        ],
        "title": "Body_upload_document_services_documents_upload_post"
      },
      "BulkRestoreResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "summary": {
            "$ref": "#/components/schemas/BulkRestoreSummary"
          },
          "results": {
            "$ref": "#/components/schemas/BulkRestoreResults"
          }
        },
        "type": "object",
        "required": [
          "message",
          "summary",
          "results"
        ],
        "title": "BulkRestoreResponse"
      },
      "BulkRestoreResults": {
        "properties": {
          "restored": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Restored"
          },
          "failed": {
            "items": {
              "$ref": "#/components/schemas/FailedItem"
            },
            "type": "array",
            "title": "Failed"
          },
          "not_found": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Not Found"
          }
        },
        "type": "object",
        "required": [
          "restored",
          "failed",
          "not_found"
        ],
        "title": "BulkRestoreResults"
      },
      "BulkRestoreSummary": {
        "properties": {
          "total_requested": {
            "type": "integer",
            "title": "Total Requested"
          },
          "restored": {
            "type": "integer",
            "title": "Restored"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "not_found": {
            "type": "integer",
            "title": "Not Found"
          }
        },
        "type": "object",
        "required": [
          "total_requested",
          "restored",
          "failed",
          "not_found"
        ],
        "title": "BulkRestoreSummary"
      },
      "Category": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Category"
      },
      "CategoryCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CategoryCreate"
      },
      "CategoryDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CategoryReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "entity_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "CategoryDetail"
      },
      "CategoryReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "CategoryReference"
      },
      "CategoryUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "CategoryUpdate"
      },
      "ChatRequest": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array",
            "title": "Messages"
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "ChatRequest"
      },
      "Comment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The comment content"
          },
          "emojis": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/EmojiReaction"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Emojis",
            "description": "Emoji reactions stored as {emoji_character: [list_of_user_reactions]}. Example: {'\ud83d\ude80': [{'user_id': 'uuid1', 'user_name': 'John'}], '\ud83d\udc4d': [{'user_id': 'uuid2', 'user_name': 'Jane'}]}"
          },
          "entity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Entity Id",
            "description": "ID of the entity this comment belongs to"
          },
          "entity_type": {
            "$ref": "#/components/schemas/EntityType",
            "description": "Type of entity: 'Test', 'TestSet', 'TestRun', 'TestResult', 'Metric', 'Model', 'Prompt', 'Behavior', 'Category', 'Task', 'Source'"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "content",
          "entity_id",
          "entity_type",
          "user_id",
          "user"
        ],
        "title": "Comment",
        "description": "Full Comment schema with all fields"
      },
      "CommentCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The comment content"
          },
          "entity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Entity Id",
            "description": "ID of the entity this comment belongs to"
          },
          "entity_type": {
            "$ref": "#/components/schemas/EntityType",
            "description": "Type of entity: 'Test', 'TestSet', 'TestRun', 'TestResult', 'Metric', 'Model', 'Prompt', 'Behavior', 'Category', 'Task', 'Source'"
          }
        },
        "type": "object",
        "required": [
          "content",
          "entity_id",
          "entity_type"
        ],
        "title": "CommentCreate",
        "description": "Schema for creating a new comment"
      },
      "CommentDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "emojis": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/EmojiReaction"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Emojis",
            "description": "Emoji reactions stored as {emoji_character: [list_of_user_reactions]}. Example: {'\ud83d\ude80': [{'user_id': 'uuid1', 'user_name': 'John'}], '\ud83d\udc4d': [{'user_id': 'uuid2', 'user_name': 'Jane'}]}"
          },
          "entity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Entity Id",
            "description": "ID of the entity this comment belongs to"
          },
          "entity_type": {
            "$ref": "#/components/schemas/EntityType",
            "description": "Type of entity: 'Test', 'TestSet', 'TestRun', 'TestResult', 'Metric', 'Model', 'Prompt', 'Behavior', 'Category', 'Task', 'Source'"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "created_at",
          "updated_at",
          "entity_id",
          "entity_type"
        ],
        "title": "CommentDetail"
      },
      "CommentUpdate": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "title": "CommentUpdate",
        "description": "Schema for updating an existing comment"
      },
      "CountEntryError": {
        "properties": {
          "count": {
            "type": "string",
            "title": "Count"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "count",
          "error"
        ],
        "title": "CountEntryError"
      },
      "CountEntryOk": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "count",
          "class_name",
          "has_more"
        ],
        "title": "CountEntryOk"
      },
      "CountsDict": {
        "properties": {
          "comments": {
            "type": "integer",
            "title": "Comments"
          },
          "tasks": {
            "type": "integer",
            "title": "Tasks"
          }
        },
        "type": "object",
        "title": "CountsDict"
      },
      "Demographic": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "dimension_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimension Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "Demographic"
      },
      "DemographicCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "dimension_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimension Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DemographicCreate"
      },
      "DemographicUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "dimension_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimension Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "DemographicUpdate"
      },
      "Dimension": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "Dimension"
      },
      "DimensionCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DimensionCreate"
      },
      "DimensionStats": {
        "properties": {
          "dimension": {
            "type": "string",
            "title": "Dimension"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Breakdown"
          }
        },
        "type": "object",
        "required": [
          "dimension",
          "total",
          "breakdown"
        ],
        "title": "DimensionStats"
      },
      "DimensionUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "DimensionUpdate"
      },
      "Document": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "Document"
      },
      "DocumentUploadResponse": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path"
        ],
        "title": "DocumentUploadResponse"
      },
      "EmojiReaction": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "User ID who reacted with this emoji"
          },
          "user_name": {
            "type": "string",
            "title": "User Name",
            "description": "User's display name"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "user_name"
        ],
        "title": "EmojiReaction",
        "description": "Schema for individual emoji reaction by a user\n\nNote: The emoji itself is stored as the dictionary key in the Comment.emojis field.\nThis schema represents the user data associated with each emoji reaction."
      },
      "EmptyRecycleBinResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "permanently_deleted": {
            "type": "integer",
            "title": "Permanently Deleted"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "warning": {
            "type": "string",
            "title": "Warning"
          }
        },
        "type": "object",
        "required": [
          "message",
          "permanently_deleted",
          "failed",
          "warning"
        ],
        "title": "EmptyRecycleBinResponse"
      },
      "Endpoint": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "protocol": {
            "$ref": "#/components/schemas/EndpointProtocol"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "auth": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NoneAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BearerAuth"
                  },
                  {
                    "$ref": "#/components/schemas/ApiKeyAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BasicAuth"
                  },
                  {
                    "$ref": "#/components/schemas/OAuth2ClientCredentials-Output"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "api_key": "#/components/schemas/ApiKeyAuth",
                    "basic": "#/components/schemas/BasicAuth",
                    "bearer": "#/components/schemas/BearerAuth",
                    "none": "#/components/schemas/NoneAuth",
                    "oauth2_client_credentials": "#/components/schemas/OAuth2ClientCredentials-Output"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth"
          },
          "environment": {
            "$ref": "#/components/schemas/EndpointEnvironment",
            "default": "development"
          },
          "config_source": {
            "$ref": "#/components/schemas/EndpointConfigSource",
            "default": "manual"
          },
          "openapi_spec_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi Spec Url"
          },
          "openapi_spec": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OpenAPISpecModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_suggestions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMSuggestionsModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "endpoint_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Path"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "query_params": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params"
          },
          "request_body_template": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Body Template"
          },
          "input_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Mappings"
          },
          "response_format": {
            "$ref": "#/components/schemas/EndpointResponseFormat",
            "default": "json"
          },
          "response_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Mappings"
          },
          "validation_rules": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Rules"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndpointAuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Token"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          },
          "token_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Url"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          },
          "audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "extra_payload": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Payload"
          },
          "last_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token"
          },
          "last_token_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token Expires At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "protocol",
          "url"
        ],
        "title": "Endpoint"
      },
      "EndpointAuthType": {
        "type": "string",
        "enum": [
          "bearer_token",
          "client_credentials"
        ],
        "title": "EndpointAuthType"
      },
      "EndpointConfigSource": {
        "type": "string",
        "enum": [
          "manual",
          "openapi",
          "llm_generated"
        ],
        "title": "EndpointConfigSource"
      },
      "EndpointCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "protocol": {
            "$ref": "#/components/schemas/EndpointProtocol"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "auth": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NoneAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BearerAuth"
                  },
                  {
                    "$ref": "#/components/schemas/ApiKeyAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BasicAuth"
                  },
                  {
                    "$ref": "#/components/schemas/OAuth2ClientCredentials-Input"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "api_key": "#/components/schemas/ApiKeyAuth",
                    "basic": "#/components/schemas/BasicAuth",
                    "bearer": "#/components/schemas/BearerAuth",
                    "none": "#/components/schemas/NoneAuth",
                    "oauth2_client_credentials": "#/components/schemas/OAuth2ClientCredentials-Input"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth"
          },
          "environment": {
            "$ref": "#/components/schemas/EndpointEnvironment",
            "default": "development"
          },
          "config_source": {
            "$ref": "#/components/schemas/EndpointConfigSource",
            "default": "manual"
          },
          "openapi_spec_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi Spec Url"
          },
          "openapi_spec": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OpenAPISpecModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_suggestions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMSuggestionsModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "endpoint_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Path"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "query_params": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params"
          },
          "request_body_template": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Body Template"
          },
          "input_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Mappings"
          },
          "response_format": {
            "$ref": "#/components/schemas/EndpointResponseFormat",
            "default": "json"
          },
          "response_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Mappings"
          },
          "validation_rules": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Rules"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndpointAuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Token"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          },
          "token_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Url"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          },
          "audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "extra_payload": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Payload"
          },
          "last_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token"
          },
          "last_token_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token Expires At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "protocol",
          "url"
        ],
        "title": "EndpointCreate"
      },
      "EndpointDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "protocol": {
            "$ref": "#/components/schemas/EndpointProtocol"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "auth": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NoneAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BearerAuth"
                  },
                  {
                    "$ref": "#/components/schemas/ApiKeyAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BasicAuth"
                  },
                  {
                    "$ref": "#/components/schemas/OAuth2ClientCredentials-Output"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "api_key": "#/components/schemas/ApiKeyAuth",
                    "basic": "#/components/schemas/BasicAuth",
                    "bearer": "#/components/schemas/BearerAuth",
                    "none": "#/components/schemas/NoneAuth",
                    "oauth2_client_credentials": "#/components/schemas/OAuth2ClientCredentials-Output"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth"
          },
          "environment": {
            "$ref": "#/components/schemas/EndpointEnvironment",
            "default": "development"
          },
          "config_source": {
            "$ref": "#/components/schemas/EndpointConfigSource",
            "default": "manual"
          },
          "openapi_spec_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi Spec Url"
          },
          "openapi_spec": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OpenAPISpecModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_suggestions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMSuggestionsModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "endpoint_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Path"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "query_params": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params"
          },
          "request_body_template": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Body Template"
          },
          "input_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Mappings"
          },
          "response_format": {
            "$ref": "#/components/schemas/EndpointResponseFormat",
            "default": "json"
          },
          "response_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Mappings"
          },
          "validation_rules": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Rules"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndpointAuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Token"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          },
          "token_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Url"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          },
          "audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "extra_payload": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Payload"
          },
          "last_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token"
          },
          "last_token_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token Expires At"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "project": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "protocol",
          "url"
        ],
        "title": "EndpointDetail"
      },
      "EndpointEnvironment": {
        "type": "string",
        "enum": [
          "production",
          "staging",
          "development"
        ],
        "title": "EndpointEnvironment"
      },
      "EndpointProtocol": {
        "type": "string",
        "enum": [
          "REST",
          "WebSocket",
          "GRPC"
        ],
        "title": "EndpointProtocol"
      },
      "EndpointResponseFormat": {
        "type": "string",
        "enum": [
          "json",
          "xml",
          "text"
        ],
        "title": "EndpointResponseFormat"
      },
      "EndpointUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "protocol": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndpointProtocol"
              },
              {
                "type": "null"
              }
            ]
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "auth": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NoneAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BearerAuth"
                  },
                  {
                    "$ref": "#/components/schemas/ApiKeyAuth"
                  },
                  {
                    "$ref": "#/components/schemas/BasicAuth"
                  },
                  {
                    "$ref": "#/components/schemas/OAuth2ClientCredentials-Input"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "api_key": "#/components/schemas/ApiKeyAuth",
                    "basic": "#/components/schemas/BasicAuth",
                    "bearer": "#/components/schemas/BearerAuth",
                    "none": "#/components/schemas/NoneAuth",
                    "oauth2_client_credentials": "#/components/schemas/OAuth2ClientCredentials-Input"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth"
          },
          "environment": {
            "$ref": "#/components/schemas/EndpointEnvironment",
            "default": "development"
          },
          "config_source": {
            "$ref": "#/components/schemas/EndpointConfigSource",
            "default": "manual"
          },
          "openapi_spec_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi Spec Url"
          },
          "openapi_spec": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OpenAPISpecModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_suggestions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMSuggestionsModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method"
          },
          "endpoint_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Path"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "query_params": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params"
          },
          "request_body_template": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Body Template"
          },
          "input_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Mappings"
          },
          "response_format": {
            "$ref": "#/components/schemas/EndpointResponseFormat",
            "default": "json"
          },
          "response_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Mappings"
          },
          "validation_rules": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Rules"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "auth_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EndpointAuthType"
              },
              {
                "type": "null"
              }
            ]
          },
          "auth_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth Token"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          },
          "token_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Url"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          },
          "audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "extra_payload": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Payload"
          },
          "last_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token"
          },
          "last_token_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Token Expires At"
          }
        },
        "type": "object",
        "title": "EndpointUpdate"
      },
      "EntityStats": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "stats": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DimensionStats"
            },
            "type": "object",
            "title": "Stats"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "history": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HistoricalStats"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "total",
          "stats"
        ],
        "title": "EntityStats"
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "General",
          "Test",
          "TestSet",
          "TestRun",
          "TestResult",
          "Metric",
          "Model",
          "Prompt",
          "Behavior",
          "Category",
          "Topic",
          "Dimension",
          "Demographic",
          "Task",
          "Project",
          "Source"
        ],
        "title": "EntityType"
      },
      "ExecuteTestConfigurationResponse": {
        "properties": {
          "test_configuration_id": {
            "type": "string",
            "format": "uuid",
            "title": "Test Configuration Id"
          },
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "endpoint_id": {
            "type": "string",
            "format": "uuid",
            "title": "Endpoint Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "test_configuration_id",
          "task_id",
          "status",
          "endpoint_id",
          "user_id"
        ],
        "title": "ExecuteTestConfigurationResponse"
      },
      "ExecutorRunCount": {
        "properties": {
          "executor_name": {
            "type": "string",
            "title": "Executor Name"
          },
          "run_count": {
            "type": "integer",
            "title": "Run Count"
          }
        },
        "type": "object",
        "required": [
          "executor_name",
          "run_count"
        ],
        "title": "ExecutorRunCount"
      },
      "ExtractDocumentRequest": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path"
        ],
        "title": "ExtractDocumentRequest"
      },
      "ExtractDocumentResponse": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "format": {
            "type": "string",
            "title": "Format"
          }
        },
        "type": "object",
        "required": [
          "content",
          "format"
        ],
        "title": "ExtractDocumentResponse"
      },
      "FailedItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "id",
          "error"
        ],
        "title": "FailedItem"
      },
      "GenerateContentRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "schema": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "GenerateContentRequest"
      },
      "GenerateTestsPrompt": {
        "properties": {
          "project_context": {
            "type": "string",
            "maxLength": 120,
            "minLength": 1,
            "title": "Project Context",
            "default": "General"
          },
          "test_behaviors": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid4"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Test Behaviors"
          },
          "test_purposes": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid4"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Test Purposes"
          },
          "key_topics": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid4"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Key Topics"
          },
          "specific_requirements": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Specific Requirements"
          },
          "test_type": {
            "type": "string",
            "enum": [
              "Single interaction tests",
              "Multi-turn conversation tests"
            ],
            "title": "Test Type"
          },
          "output_format": {
            "type": "string",
            "enum": [
              "Generate only user inputs",
              "Generate both user inputs and expected responses"
            ],
            "title": "Output Format"
          }
        },
        "type": "object",
        "required": [
          "test_type",
          "output_format"
        ],
        "title": "GenerateTestsPrompt"
      },
      "GenerateTestsRequest": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GenerateTestsPrompt"
              },
              {
                "$ref": "#/components/schemas/ImproveTestPrompt"
              }
            ],
            "title": "Prompt"
          },
          "num_tests": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Num Tests",
            "default": 5
          },
          "documents": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Document"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "GenerateTestsRequest"
      },
      "GenerateTestsResponse": {
        "properties": {
          "tests": {
            "items": {
              "$ref": "#/components/schemas/rhesis__backend__app__schemas__services__Test"
            },
            "type": "array",
            "title": "Tests"
          }
        },
        "type": "object",
        "required": [
          "tests"
        ],
        "title": "GenerateTestsResponse"
      },
      "GenerationSample": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "behavior": {
            "type": "string",
            "title": "Behavior"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "rating": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "id",
          "text",
          "behavior",
          "topic"
        ],
        "title": "GenerationSample"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "HealthResponse"
      },
      "HistoricalStats": {
        "properties": {
          "period": {
            "type": "string",
            "title": "Period"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          },
          "monthly_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Monthly Counts"
          }
        },
        "type": "object",
        "required": [
          "period",
          "start_date",
          "end_date",
          "monthly_counts"
        ],
        "title": "HistoricalStats"
      },
      "HomeProtectedResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "HomeProtectedResponse"
      },
      "HomePublicResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "login_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Login Url"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "HomePublicResponse"
      },
      "ImproveTestPrompt": {
        "properties": {
          "original_test": {
            "type": "string",
            "maxLength": 20000,
            "minLength": 1,
            "title": "Original Test"
          },
          "test_type": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Test Type"
          },
          "topic": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Topic"
          },
          "user_rating": {
            "type": "string",
            "maxLength": 100,
            "title": "User Rating",
            "default": ""
          },
          "improvement_feedback": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Improvement Feedback"
          },
          "instruction": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Instruction",
            "default": "Please generate a new version of this test that addresses the feedback."
          }
        },
        "type": "object",
        "required": [
          "original_test",
          "test_type",
          "topic"
        ],
        "title": "ImproveTestPrompt"
      },
      "Json-Input": {
        "anyOf": [
          {
            "additionalProperties": {
              "$ref": "#/components/schemas/Json-Input"
            },
            "type": "object"
          },
          {
            "items": {
              "$ref": "#/components/schemas/Json-Input"
            },
            "type": "array"
          },
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "type": "null"
          }
        ]
      },
      "Json-Output": {
        "anyOf": [
          {
            "additionalProperties": {
              "$ref": "#/components/schemas/Json-Output"
            },
            "type": "object"
          },
          {
            "items": {
              "$ref": "#/components/schemas/Json-Output"
            },
            "type": "array"
          },
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "type": "null"
          }
        ]
      },
      "LLMSuggestionsModel-Input": {
        "properties": {
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "query_params": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params"
          },
          "request_body_template": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Json-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "input_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Mappings"
          },
          "notes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Input"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "LLMSuggestionsModel"
      },
      "LLMSuggestionsModel-Output": {
        "properties": {
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "query_params": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Params"
          },
          "request_body_template": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Json-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "input_mappings": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Mappings"
          },
          "notes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Output"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "LLMSuggestionsModel"
      },
      "ListModelsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "models": {
            "items": {
              "$ref": "#/components/schemas/ModelInfo"
            },
            "type": "array",
            "title": "Models"
          }
        },
        "type": "object",
        "required": [
          "count",
          "models"
        ],
        "title": "ListModelsResponse"
      },
      "LogoutResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "LogoutResponse"
      },
      "Message": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "Message"
      },
      "Metric": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "evaluation_prompt": {
            "type": "string",
            "title": "Evaluation Prompt"
          },
          "evaluation_steps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Steps"
          },
          "reasoning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning"
          },
          "score_type": {
            "$ref": "#/components/schemas/ScoreType"
          },
          "min_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Score"
          },
          "max_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Score"
          },
          "reference_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Score"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          },
          "threshold_operator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThresholdOperator"
              },
              {
                "type": "null"
              }
            ],
            "default": ">="
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation"
          },
          "metric_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Type Id"
          },
          "backend_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Type Id"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "class_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Class Name"
          },
          "ground_truth_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth Required",
            "default": false
          },
          "context_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Required",
            "default": false
          },
          "evaluation_examples": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Examples"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "evaluation_prompt",
          "score_type"
        ],
        "title": "Metric"
      },
      "MetricCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "evaluation_prompt": {
            "type": "string",
            "title": "Evaluation Prompt"
          },
          "evaluation_steps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Steps"
          },
          "reasoning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning"
          },
          "score_type": {
            "$ref": "#/components/schemas/ScoreType"
          },
          "min_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Score"
          },
          "max_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Score"
          },
          "reference_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Score"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          },
          "threshold_operator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThresholdOperator"
              },
              {
                "type": "null"
              }
            ],
            "default": ">="
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation"
          },
          "metric_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Type Id"
          },
          "backend_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Type Id"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "class_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Class Name"
          },
          "ground_truth_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth Required",
            "default": false
          },
          "context_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Required",
            "default": false
          },
          "evaluation_examples": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Examples"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "evaluation_prompt",
          "score_type"
        ],
        "title": "MetricCreate"
      },
      "MetricReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "metric_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "backend_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "MetricReference"
      },
      "MetricResult": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "is_successful": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Successful"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          }
        },
        "type": "object",
        "title": "MetricResult"
      },
      "MetricStats": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "passed": {
            "type": "integer",
            "title": "Passed"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "pass_rate": {
            "type": "number",
            "title": "Pass Rate"
          }
        },
        "type": "object",
        "required": [
          "total",
          "passed",
          "failed",
          "pass_rate"
        ],
        "title": "MetricStats"
      },
      "MetricUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "evaluation_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Prompt"
          },
          "evaluation_steps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Steps"
          },
          "reasoning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning"
          },
          "score_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScoreType"
              },
              {
                "type": "null"
              }
            ]
          },
          "min_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Score"
          },
          "max_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Score"
          },
          "reference_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Score"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          },
          "threshold_operator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThresholdOperator"
              },
              {
                "type": "null"
              }
            ]
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation"
          },
          "metric_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Type Id"
          },
          "backend_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Type Id"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "class_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Class Name"
          },
          "ground_truth_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth Required",
            "default": false
          },
          "context_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Required",
            "default": false
          },
          "evaluation_examples": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Examples"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "MetricUpdate"
      },
      "Model": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "endpoint": {
            "type": "string",
            "title": "Endpoint"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "provider_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "provider_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookup"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "model_name",
          "endpoint",
          "key"
        ],
        "title": "Model",
        "description": "Complete Model schema with relationships"
      },
      "ModelCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "model_name": {
            "type": "string",
            "title": "Model Name"
          },
          "endpoint": {
            "type": "string",
            "title": "Endpoint"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "provider_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "model_name",
          "endpoint",
          "key"
        ],
        "title": "ModelCreate",
        "description": "Schema for creating a new Model"
      },
      "ModelDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "provider_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "provider_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "key"
        ],
        "title": "ModelDetail"
      },
      "ModelInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "class_name": {
            "type": "string",
            "title": "Class Name"
          },
          "has_organization_id": {
            "type": "boolean",
            "title": "Has Organization Id"
          },
          "has_user_id": {
            "type": "boolean",
            "title": "Has User Id"
          },
          "columns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Columns"
          }
        },
        "type": "object",
        "required": [
          "name",
          "class_name",
          "has_organization_id",
          "has_user_id",
          "columns"
        ],
        "title": "ModelInfo"
      },
      "ModelReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "ModelReference"
      },
      "ModelUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "request_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Headers"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "provider_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          }
        },
        "type": "object",
        "title": "ModelUpdate",
        "description": "Schema for updating an existing Model"
      },
      "NoneAuth": {
        "properties": {
          "type": {
            "type": "string",
            "const": "none",
            "title": "Type"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "NoneAuth"
      },
      "OAuth2ClientCredentials-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "oauth2_client_credentials",
            "title": "Type"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "default": []
          },
          "audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "extra_payload": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Payload"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "token_url",
          "client_id",
          "client_secret"
        ],
        "title": "OAuth2ClientCredentials"
      },
      "OAuth2ClientCredentials-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "oauth2_client_credentials",
            "title": "Type"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "default": []
          },
          "audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "extra_payload": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Payload"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "type",
          "token_url",
          "client_id",
          "client_secret"
        ],
        "title": "OAuth2ClientCredentials"
      },
      "OpenAPISpecModel-Input": {
        "properties": {
          "openapi": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi"
          },
          "swagger": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Swagger"
          },
          "info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Info"
          },
          "paths": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Input"
                  },
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paths"
          },
          "components": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Components"
          },
          "definitions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definitions"
          },
          "servers": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Input"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Servers"
          },
          "security": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Security"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Input"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "externalDocs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externaldocs"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OpenAPISpecModel"
      },
      "OpenAPISpecModel-Output": {
        "properties": {
          "openapi": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi"
          },
          "swagger": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Swagger"
          },
          "info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Info"
          },
          "paths": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Output"
                  },
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paths"
          },
          "components": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Components"
          },
          "definitions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Definitions"
          },
          "servers": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Output"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Servers"
          },
          "security": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Security"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Json-Output"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "externalDocs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Externaldocs"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "OpenAPISpecModel"
      },
      "Organization": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "max_users": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Users"
          },
          "subscription_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Ends At"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain"
          },
          "is_domain_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Domain Verified",
            "default": false
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_onboarding_complete": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Onboarding Complete",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Organization"
      },
      "OrganizationCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "max_users": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Users"
          },
          "subscription_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Ends At"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain"
          },
          "is_domain_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Domain Verified",
            "default": false
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_onboarding_complete": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Onboarding Complete",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "OrganizationReference"
      },
      "OrganizationUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website"
          },
          "logo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logo Url"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "max_users": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Users"
          },
          "subscription_ends_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subscription Ends At"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain"
          },
          "is_domain_verified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Domain Verified",
            "default": false
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "is_onboarding_complete": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Onboarding Complete",
            "default": false
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "OverallStats": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "passed": {
            "type": "integer",
            "title": "Passed"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "pass_rate": {
            "type": "number",
            "title": "Pass Rate"
          }
        },
        "type": "object",
        "required": [
          "total",
          "passed",
          "failed",
          "pass_rate"
        ],
        "title": "OverallStats"
      },
      "Paginated_CategoryDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/CategoryDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[CategoryDetail]"
      },
      "Paginated_Demographic_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Demographic"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Demographic]"
      },
      "Paginated_Dimension_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Dimension"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Dimension]"
      },
      "Paginated_EndpointDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/EndpointDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[EndpointDetail]"
      },
      "Paginated_ModelDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ModelDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[ModelDetail]"
      },
      "Paginated_Organization_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Organization"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Organization]"
      },
      "Paginated_ProjectDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ProjectDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[ProjectDetail]"
      },
      "Paginated_PromptTemplate_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/PromptTemplate"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[PromptTemplate]"
      },
      "Paginated_Prompt_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Prompt"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Prompt]"
      },
      "Paginated_ResponsePattern_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ResponsePattern"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[ResponsePattern]"
      },
      "Paginated_Risk_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Risk"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Risk]"
      },
      "Paginated_Source_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Source]"
      },
      "Paginated_StatusDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/StatusDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[StatusDetail]"
      },
      "Paginated_Tag_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[Tag]"
      },
      "Paginated_TaskDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TaskDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TaskDetail]"
      },
      "Paginated_TestConfigurationDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TestConfigurationDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TestConfigurationDetail]"
      },
      "Paginated_TestContext_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TestContext"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TestContext]"
      },
      "Paginated_TestDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TestDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TestDetail]"
      },
      "Paginated_TestResultDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TestResultDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TestResultDetail]"
      },
      "Paginated_TestRunDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TestRunDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TestRunDetail]"
      },
      "Paginated_TestSetDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TestSetDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TestSetDetail]"
      },
      "Paginated_TokenRead_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TokenRead"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TokenRead]"
      },
      "Paginated_TopicDetail_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TopicDetail"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TopicDetail]"
      },
      "Paginated_TypeLookup_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TypeLookup"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[TypeLookup]"
      },
      "Paginated_UseCase_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UseCase"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[UseCase]"
      },
      "Paginated_User_": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[User]"
      },
      "Pagination": {
        "properties": {
          "totalCount": {
            "type": "integer",
            "title": "Totalcount"
          }
        },
        "type": "object",
        "required": [
          "totalCount"
        ],
        "title": "Pagination"
      },
      "PermanentlyDeleteResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "item_id": {
            "type": "string",
            "title": "Item Id"
          },
          "warning": {
            "type": "string",
            "title": "Warning"
          }
        },
        "type": "object",
        "required": [
          "message",
          "item_id",
          "warning"
        ],
        "title": "PermanentlyDeleteResponse"
      },
      "Project": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "Project"
      },
      "ProjectCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ProjectCreate"
      },
      "ProjectDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "ProjectDetail"
      },
      "ProjectReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "ProjectReference"
      },
      "ProjectUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "Prompt": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "demographic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demographic Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "attack_category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "prompt_template_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Template Id"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "content",
          "language_code"
        ],
        "title": "Prompt"
      },
      "PromptCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "demographic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demographic Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "attack_category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "prompt_template_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Template Id"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "content",
          "language_code"
        ],
        "title": "PromptCreate"
      },
      "PromptReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "PromptReference"
      },
      "PromptRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "PromptRequest"
      },
      "PromptTemplate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "is_summary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Summary",
            "default": false
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "PromptTemplate"
      },
      "PromptTemplateCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "is_summary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Summary",
            "default": false
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "PromptTemplateCreate"
      },
      "PromptTemplateUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "is_summary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Summary",
            "default": false
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "PromptTemplateUpdate"
      },
      "PromptUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "demographic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demographic Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "attack_category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "prompt_template_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Template Id"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "title": "PromptUpdate"
      },
      "PromptView": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "demographic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demographic"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "attack_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attack Category"
          },
          "topic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "behavior": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "content",
          "language_code"
        ],
        "title": "PromptView"
      },
      "RecycleBinCountsResponse": {
        "properties": {
          "total_models_with_deleted": {
            "type": "integer",
            "title": "Total Models With Deleted"
          },
          "counts": {
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CountEntryOk"
                },
                {
                  "$ref": "#/components/schemas/CountEntryError"
                }
              ]
            },
            "type": "object",
            "title": "Counts"
          }
        },
        "type": "object",
        "required": [
          "total_models_with_deleted",
          "counts"
        ],
        "title": "RecycleBinCountsResponse"
      },
      "RecycledRecordsResponse": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Json-Output"
            },
            "type": "array",
            "title": "Items"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "model",
          "count",
          "items",
          "has_more"
        ],
        "title": "RecycledRecordsResponse"
      },
      "ResponsePattern": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "response_pattern_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Pattern Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "ResponsePattern"
      },
      "ResponsePatternCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "response_pattern_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Pattern Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "ResponsePatternCreate"
      },
      "ResponsePatternUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "response_pattern_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Pattern Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "ResponsePatternUpdate"
      },
      "RestoreResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "item": {
            "$ref": "#/components/schemas/Json-Output"
          }
        },
        "type": "object",
        "required": [
          "message",
          "item"
        ],
        "title": "RestoreResponse"
      },
      "ResultDistribution": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "passed": {
            "type": "integer",
            "title": "Passed"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "pending": {
            "type": "integer",
            "title": "Pending"
          },
          "pass_rate": {
            "type": "number",
            "title": "Pass Rate"
          }
        },
        "type": "object",
        "required": [
          "total",
          "passed",
          "failed",
          "pending",
          "pass_rate"
        ],
        "title": "ResultDistribution"
      },
      "Risk": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Risk"
      },
      "RiskCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "RiskCreate"
      },
      "RiskUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "RiskUpdate"
      },
      "RootResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "branch": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Branch"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          },
          "docs_url": {
            "type": "string",
            "title": "Docs Url"
          },
          "redoc_url": {
            "type": "string",
            "title": "Redoc Url"
          },
          "auth": {
            "$ref": "#/components/schemas/AuthLinks"
          },
          "home": {
            "type": "string",
            "title": "Home"
          },
          "api_usage": {
            "$ref": "#/components/schemas/APIUsage"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status",
          "docs_url",
          "redoc_url",
          "auth",
          "home",
          "api_usage"
        ],
        "title": "RootResponse"
      },
      "ScoreType": {
        "type": "string",
        "enum": [
          "binary",
          "numeric",
          "categorical"
        ],
        "title": "ScoreType"
      },
      "Source": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "source_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type Id"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "citation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Citation"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "Source"
      },
      "SourceCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "source_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type Id"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "citation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Citation"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "SourceCreate"
      },
      "SourceReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "SourceReference"
      },
      "SourceUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "source_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type Id"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "citation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Citation"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "source_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Metadata"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "SourceUpdate"
      },
      "StatsMode": {
        "type": "string",
        "enum": [
          "entity",
          "related_entity"
        ],
        "title": "StatsMode"
      },
      "Status": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Status"
      },
      "StatusCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "StatusCreate"
      },
      "StatusDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "StatusDetail"
      },
      "StatusDistribution": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "percentage": {
            "type": "number",
            "title": "Percentage"
          }
        },
        "type": "object",
        "required": [
          "status",
          "count",
          "percentage"
        ],
        "title": "StatusDistribution"
      },
      "StatusMessageResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "StatusMessageResponse"
      },
      "StatusReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "StatusReference"
      },
      "StatusUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "StatusUpdate"
      },
      "Tag": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon_unicode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Unicode"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Tag"
      },
      "TagCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon_unicode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Unicode"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TagCreate"
      },
      "TagRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "icon_unicode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Unicode"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "TagRead"
      },
      "TagUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "icon_unicode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Unicode"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "TagUpdate"
      },
      "Task": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "type": "string",
            "format": "uuid4",
            "title": "User Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "status_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Status Id"
          },
          "priority_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority Id"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "task_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Metadata"
          },
          "comment_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment Count",
            "default": 0
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Status"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookup"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "user_id",
          "status_id"
        ],
        "title": "Task",
        "description": "Schema for Task with relationships and auto-generated fields"
      },
      "TaskCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "status_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Status Id"
          },
          "priority_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority Id"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "task_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Metadata"
          }
        },
        "type": "object",
        "required": [
          "title",
          "status_id"
        ],
        "title": "TaskCreate",
        "description": "Schema for creating a new Task - user_id is auto-populated from authenticated user"
      },
      "TaskDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "priority_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority Id"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "task_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Metadata"
          },
          "comment_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment Count",
            "default": 0
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "priority": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TaskDetail"
      },
      "TaskUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "priority_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority Id"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "task_metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Metadata"
          }
        },
        "type": "object",
        "title": "TaskUpdate",
        "description": "Schema for updating a Task"
      },
      "TestBulkCreate": {
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/TestPromptCreate"
          },
          "behavior": {
            "type": "string",
            "title": "Behavior"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "test_configuration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "behavior",
          "category",
          "topic"
        ],
        "title": "TestBulkCreate"
      },
      "TestBulkCreateRequest": {
        "properties": {
          "tests": {
            "items": {
              "$ref": "#/components/schemas/TestBulkCreate"
            },
            "type": "array",
            "title": "Tests"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          }
        },
        "type": "object",
        "required": [
          "tests"
        ],
        "title": "TestBulkCreateRequest"
      },
      "TestBulkCreateResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "total_tests": {
            "type": "integer",
            "title": "Total Tests"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "total_tests",
          "message"
        ],
        "title": "TestBulkCreateResponse"
      },
      "TestConfigRequest": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TestConfigRequest"
      },
      "TestConfigResponse": {
        "properties": {
          "behaviors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Behaviors"
          },
          "topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Topics"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories"
          },
          "scenarios": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scenarios"
          }
        },
        "type": "object",
        "required": [
          "behaviors",
          "topics",
          "categories",
          "scenarios"
        ],
        "title": "TestConfigResponse"
      },
      "TestConfiguration": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "endpoint_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Endpoint Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "use_case_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "endpoint_id"
        ],
        "title": "TestConfiguration"
      },
      "TestConfigurationCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "endpoint_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Endpoint Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "use_case_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "endpoint_id"
        ],
        "title": "TestConfigurationCreate"
      },
      "TestConfigurationDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "endpoint_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "use_case_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CategoryReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "topic": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TopicReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "use_case": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UseCaseReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_set": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "endpoint": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__EndpointReference__1"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestConfigurationDetail"
      },
      "TestConfigurationUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "endpoint_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "use_case_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Case Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "title": "TestConfigurationUpdate"
      },
      "TestConnectionResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "TestConnectionResponse"
      },
      "TestContext": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "test_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Id"
          },
          "entity_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Entity Id"
          },
          "entity_type": {
            "type": "string",
            "title": "Entity Type"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "test_id",
          "entity_id",
          "entity_type"
        ],
        "title": "TestContext"
      },
      "TestContextCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "test_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Id"
          },
          "entity_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Entity Id"
          },
          "entity_type": {
            "type": "string",
            "title": "Entity Type"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "test_id",
          "entity_id",
          "entity_type"
        ],
        "title": "TestContextCreate"
      },
      "TestContextUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "test_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Id"
          },
          "entity_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Id"
          },
          "entity_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "TestContextUpdate"
      },
      "TestCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "test_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Type Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "test_configuration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "test_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestMetadata-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TestCreate"
      },
      "TestData": {
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/TestPrompt-Input"
          },
          "behavior": {
            "type": "string",
            "title": "Behavior"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "test_configuration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "metadata": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Json-Input"
            },
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "behavior",
          "category",
          "topic"
        ],
        "title": "TestData"
      },
      "TestDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "prompt_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Prompt Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "test_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Type Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "test_configuration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "test_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__TestMetadata"
              },
              {
                "type": "null"
              }
            ]
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "topic": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TopicReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "behavior": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BehaviorReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CategoryReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SourceReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "created_at",
          "updated_at",
          "prompt_id"
        ],
        "title": "TestDetail"
      },
      "TestMetadata-Input": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__SourceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources"
          }
        },
        "type": "object",
        "title": "TestMetadata"
      },
      "TestMetrics": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "metrics": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/MetricResult"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metrics"
          }
        },
        "type": "object",
        "title": "TestMetrics"
      },
      "TestOutput": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "output": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          }
        },
        "type": "object",
        "title": "TestOutput"
      },
      "TestPrompt-Input": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "default": "en"
          },
          "demographic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demographic"
          },
          "dimension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimension"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "TestPrompt"
      },
      "TestPrompt-Output": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "default": "en"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "TestPrompt"
      },
      "TestPromptCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "default": "en"
          },
          "demographic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Demographic"
          },
          "dimension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimension"
          },
          "expected_response": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expected Response"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "TestPromptCreate"
      },
      "TestReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestReference"
      },
      "TestResult": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "test_configuration_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Configuration Id"
          },
          "test_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "test_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "test_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "test_configuration_id"
        ],
        "title": "TestResult"
      },
      "TestResultCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "test_configuration_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Configuration Id"
          },
          "test_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "test_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "test_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "test_configuration_id"
        ],
        "title": "TestResultCreate"
      },
      "TestResultDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "test_configuration_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Configuration Id"
          },
          "test_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "test_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "test_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "test_configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__TestConfigurationReference__1"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_run": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestRunReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "test": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "created_at",
          "updated_at",
          "test_configuration_id"
        ],
        "title": "TestResultDetail"
      },
      "TestResultStatsAll": {
        "properties": {
          "metric_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Metric Pass Rates"
          },
          "behavior_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Behavior Pass Rates"
          },
          "category_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Category Pass Rates"
          },
          "topic_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Topic Pass Rates"
          },
          "overall_pass_rates": {
            "$ref": "#/components/schemas/OverallStats"
          },
          "timeline": {
            "items": {
              "$ref": "#/components/schemas/TimelineData"
            },
            "type": "array",
            "title": "Timeline"
          },
          "test_run_summary": {
            "items": {
              "$ref": "#/components/schemas/TestRunSummary"
            },
            "type": "array",
            "title": "Test Run Summary"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "metric_pass_rates",
          "behavior_pass_rates",
          "category_pass_rates",
          "topic_pass_rates",
          "overall_pass_rates",
          "timeline",
          "test_run_summary",
          "metadata"
        ],
        "title": "TestResultStatsAll",
        "description": "Complete dataset - all sections"
      },
      "TestResultStatsBehavior": {
        "properties": {
          "behavior_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Behavior Pass Rates"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "behavior_pass_rates",
          "metadata"
        ],
        "title": "TestResultStatsBehavior",
        "description": "Behavior pass/fail rates only"
      },
      "TestResultStatsCategory": {
        "properties": {
          "category_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Category Pass Rates"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "category_pass_rates",
          "metadata"
        ],
        "title": "TestResultStatsCategory",
        "description": "Category pass/fail rates only"
      },
      "TestResultStatsMetadata": {
        "properties": {
          "generated_at": {
            "type": "string",
            "title": "Generated At"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "test_run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Id"
          },
          "period": {
            "type": "string",
            "title": "Period"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          },
          "total_test_runs": {
            "type": "integer",
            "title": "Total Test Runs"
          },
          "total_test_results": {
            "type": "integer",
            "title": "Total Test Results"
          },
          "mode": {
            "type": "string",
            "title": "Mode"
          },
          "available_metrics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Metrics"
          },
          "available_behaviors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Behaviors"
          },
          "available_categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Categories"
          },
          "available_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Topics"
          }
        },
        "type": "object",
        "required": [
          "generated_at",
          "period",
          "start_date",
          "end_date",
          "total_test_runs",
          "total_test_results",
          "mode",
          "available_metrics",
          "available_behaviors",
          "available_categories",
          "available_topics"
        ],
        "title": "TestResultStatsMetadata"
      },
      "TestResultStatsMetrics": {
        "properties": {
          "metric_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Metric Pass Rates"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "metric_pass_rates",
          "metadata"
        ],
        "title": "TestResultStatsMetrics",
        "description": "Individual metric pass/fail rates only"
      },
      "TestResultStatsMode": {
        "type": "string",
        "enum": [
          "all",
          "metrics",
          "behavior",
          "category",
          "topic",
          "overall",
          "timeline",
          "test_runs",
          "summary"
        ],
        "title": "TestResultStatsMode"
      },
      "TestResultStatsOverall": {
        "properties": {
          "overall_pass_rates": {
            "$ref": "#/components/schemas/OverallStats"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "overall_pass_rates",
          "metadata"
        ],
        "title": "TestResultStatsOverall",
        "description": "Overall pass/fail rates only"
      },
      "TestResultStatsSummary": {
        "properties": {
          "overall_pass_rates": {
            "$ref": "#/components/schemas/OverallStats"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "overall_pass_rates",
          "metadata"
        ],
        "title": "TestResultStatsSummary",
        "description": "Lightweight summary - overall stats + metadata only"
      },
      "TestResultStatsTestRuns": {
        "properties": {
          "test_run_summary": {
            "items": {
              "$ref": "#/components/schemas/TestRunSummary"
            },
            "type": "array",
            "title": "Test Run Summary"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "test_run_summary",
          "metadata"
        ],
        "title": "TestResultStatsTestRuns",
        "description": "Test run summary only"
      },
      "TestResultStatsTimeline": {
        "properties": {
          "timeline": {
            "items": {
              "$ref": "#/components/schemas/TimelineData"
            },
            "type": "array",
            "title": "Timeline"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "timeline",
          "metadata"
        ],
        "title": "TestResultStatsTimeline",
        "description": "Timeline data only"
      },
      "TestResultStatsTopic": {
        "properties": {
          "topic_pass_rates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Topic Pass Rates"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestResultStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "topic_pass_rates",
          "metadata"
        ],
        "title": "TestResultStatsTopic",
        "description": "Topic pass/fail rates only"
      },
      "TestResultUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "test_configuration_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration Id"
          },
          "test_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Id"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "test_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "test_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at"
        ],
        "title": "TestResultUpdate"
      },
      "TestRun": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestRunAttributes"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_configuration_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Configuration Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "test_configuration_id"
        ],
        "title": "TestRun"
      },
      "TestRunAttributes": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "environment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Environment"
          },
          "total_tests": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tests"
          }
        },
        "type": "object",
        "title": "TestRunAttributes",
        "description": "Extra metadata for a test run."
      },
      "TestRunCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestRunAttributes"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_configuration_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Configuration Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "test_configuration_id"
        ],
        "title": "TestRunCreate"
      },
      "TestRunDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestRunAttributes"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_configuration_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Test Configuration Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__TestConfigurationReference__2"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "test_configuration_id"
        ],
        "title": "TestRunDetail"
      },
      "TestRunOverallSummary": {
        "properties": {
          "total_runs": {
            "type": "integer",
            "title": "Total Runs"
          },
          "unique_test_sets": {
            "type": "integer",
            "title": "Unique Test Sets"
          },
          "unique_executors": {
            "type": "integer",
            "title": "Unique Executors"
          },
          "most_common_status": {
            "type": "string",
            "title": "Most Common Status"
          },
          "pass_rate": {
            "type": "number",
            "title": "Pass Rate"
          }
        },
        "type": "object",
        "required": [
          "total_runs",
          "unique_test_sets",
          "unique_executors",
          "most_common_status",
          "pass_rate"
        ],
        "title": "TestRunOverallSummary"
      },
      "TestRunReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestRunReference"
      },
      "TestRunStatsAll": {
        "properties": {
          "status_distribution": {
            "items": {
              "$ref": "#/components/schemas/StatusDistribution"
            },
            "type": "array",
            "title": "Status Distribution"
          },
          "result_distribution": {
            "$ref": "#/components/schemas/ResultDistribution"
          },
          "most_run_test_sets": {
            "items": {
              "$ref": "#/components/schemas/TestSetRunCount"
            },
            "type": "array",
            "title": "Most Run Test Sets"
          },
          "top_executors": {
            "items": {
              "$ref": "#/components/schemas/ExecutorRunCount"
            },
            "type": "array",
            "title": "Top Executors"
          },
          "timeline": {
            "items": {
              "$ref": "#/components/schemas/TestRunTimelineData"
            },
            "type": "array",
            "title": "Timeline"
          },
          "overall_summary": {
            "$ref": "#/components/schemas/TestRunOverallSummary"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "status_distribution",
          "result_distribution",
          "most_run_test_sets",
          "top_executors",
          "timeline",
          "overall_summary",
          "metadata"
        ],
        "title": "TestRunStatsAll",
        "description": "Complete dataset - all sections"
      },
      "TestRunStatsExecutors": {
        "properties": {
          "top_executors": {
            "items": {
              "$ref": "#/components/schemas/ExecutorRunCount"
            },
            "type": "array",
            "title": "Top Executors"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "top_executors",
          "metadata"
        ],
        "title": "TestRunStatsExecutors",
        "description": "Top executors only"
      },
      "TestRunStatsMetadata": {
        "properties": {
          "generated_at": {
            "type": "string",
            "title": "Generated At"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "period": {
            "type": "string",
            "title": "Period"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          },
          "total_test_runs": {
            "type": "integer",
            "title": "Total Test Runs"
          },
          "mode": {
            "type": "string",
            "title": "Mode"
          },
          "available_statuses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Statuses"
          },
          "available_test_sets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Test Sets"
          },
          "available_executors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Executors"
          }
        },
        "type": "object",
        "required": [
          "generated_at",
          "period",
          "start_date",
          "end_date",
          "total_test_runs",
          "mode",
          "available_statuses",
          "available_test_sets",
          "available_executors"
        ],
        "title": "TestRunStatsMetadata"
      },
      "TestRunStatsMode": {
        "type": "string",
        "enum": [
          "all",
          "status",
          "results",
          "test_sets",
          "executors",
          "timeline",
          "summary"
        ],
        "title": "TestRunStatsMode"
      },
      "TestRunStatsResults": {
        "properties": {
          "result_distribution": {
            "$ref": "#/components/schemas/ResultDistribution"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "result_distribution",
          "metadata"
        ],
        "title": "TestRunStatsResults",
        "description": "Result distribution only"
      },
      "TestRunStatsStatus": {
        "properties": {
          "status_distribution": {
            "items": {
              "$ref": "#/components/schemas/StatusDistribution"
            },
            "type": "array",
            "title": "Status Distribution"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "status_distribution",
          "metadata"
        ],
        "title": "TestRunStatsStatus",
        "description": "Status distribution only"
      },
      "TestRunStatsSummary": {
        "properties": {
          "overall_summary": {
            "$ref": "#/components/schemas/TestRunOverallSummary"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "overall_summary",
          "metadata"
        ],
        "title": "TestRunStatsSummary",
        "description": "Lightweight summary - overall summary + metadata only"
      },
      "TestRunStatsTests": {
        "properties": {
          "most_run_test_sets": {
            "items": {
              "$ref": "#/components/schemas/TestSetRunCount"
            },
            "type": "array",
            "title": "Most Run Test Sets"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "most_run_test_sets",
          "metadata"
        ],
        "title": "TestRunStatsTests",
        "description": "Most run test sets only"
      },
      "TestRunStatsTimeline": {
        "properties": {
          "timeline": {
            "items": {
              "$ref": "#/components/schemas/TestRunTimelineData"
            },
            "type": "array",
            "title": "Timeline"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestRunStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "timeline",
          "metadata"
        ],
        "title": "TestRunStatsTimeline",
        "description": "Timeline data only"
      },
      "TestRunSummary": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "total_tests": {
            "type": "integer",
            "title": "Total Tests"
          },
          "overall": {
            "$ref": "#/components/schemas/OverallStats"
          },
          "metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "total_tests",
          "overall",
          "metrics"
        ],
        "title": "TestRunSummary"
      },
      "TestRunTimelineData": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "total_runs": {
            "type": "integer",
            "title": "Total Runs"
          },
          "status_breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status Breakdown"
          },
          "result_breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Result Breakdown"
          }
        },
        "type": "object",
        "required": [
          "date",
          "total_runs",
          "status_breakdown",
          "result_breakdown"
        ],
        "title": "TestRunTimelineData"
      },
      "TestRunUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestRunAttributes"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_configuration_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          }
        },
        "type": "object",
        "title": "TestRunUpdate"
      },
      "TestSet": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "license_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetAttributes-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TestSet"
      },
      "TestSetAttributes-Input": {
        "properties": {
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "topics": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topics"
          },
          "behaviors": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behaviors"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test_set__SourceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources"
          },
          "total_tests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tests"
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetLabelBuckets"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TestSetAttributes",
        "description": "Structured attributes as seen in the payload."
      },
      "TestSetAttributes-Output": {
        "properties": {
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "topics": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topics"
          },
          "behaviors": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behaviors"
          },
          "use_cases": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid4"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Cases"
          },
          "sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test_set__SourceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources"
          },
          "total_tests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tests"
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetLabelBuckets"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TestSetAttributes",
        "description": "Structured attributes as seen in the payload."
      },
      "TestSetBulkAssociateRequest": {
        "properties": {
          "test_ids": {
            "items": {
              "type": "string",
              "format": "uuid4"
            },
            "type": "array",
            "title": "Test Ids"
          }
        },
        "type": "object",
        "required": [
          "test_ids"
        ],
        "title": "TestSetBulkAssociateRequest"
      },
      "TestSetBulkAssociateResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "total_tests": {
            "type": "integer",
            "title": "Total Tests"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "metadata": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Json-Output"
            },
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "success",
          "total_tests",
          "message"
        ],
        "title": "TestSetBulkAssociateResponse"
      },
      "TestSetBulkCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "tests": {
            "items": {
              "$ref": "#/components/schemas/TestData"
            },
            "type": "array",
            "title": "Tests"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "name",
          "tests"
        ],
        "title": "TestSetBulkCreate"
      },
      "TestSetBulkDisassociateRequest": {
        "properties": {
          "test_ids": {
            "items": {
              "type": "string",
              "format": "uuid4"
            },
            "type": "array",
            "title": "Test Ids"
          }
        },
        "type": "object",
        "required": [
          "test_ids"
        ],
        "title": "TestSetBulkDisassociateRequest"
      },
      "TestSetBulkDisassociateResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "total_tests": {
            "type": "integer",
            "title": "Total Tests"
          },
          "removed_associations": {
            "type": "integer",
            "title": "Removed Associations"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "total_tests",
          "removed_associations",
          "message"
        ],
        "title": "TestSetBulkDisassociateResponse"
      },
      "TestSetBulkResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "license_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "TestSetBulkResponse"
      },
      "TestSetCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "license_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetAttributes-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TestSetCreate"
      },
      "TestSetDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "license_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetAttributes-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "license_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestSetDetail"
      },
      "TestSetExecutionRequest": {
        "properties": {
          "execution_mode": {
            "type": "string",
            "enum": [
              "Parallel",
              "Sequential"
            ],
            "title": "Execution Mode",
            "default": "Parallel"
          }
        },
        "type": "object",
        "title": "TestSetExecutionRequest",
        "description": "Request model for test set execution."
      },
      "TestSetExecutionResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "test_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Id"
          },
          "task_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Task Id"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "TestSetExecutionResponse"
      },
      "TestSetGenerationConfig": {
        "properties": {
          "project_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Name"
          },
          "behaviors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Behaviors",
            "default": []
          },
          "purposes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Purposes",
            "default": []
          },
          "test_type": {
            "type": "string",
            "title": "Test Type",
            "default": "single_turn"
          },
          "response_generation": {
            "type": "string",
            "title": "Response Generation",
            "default": "prompt_only"
          },
          "test_coverage": {
            "type": "string",
            "title": "Test Coverage",
            "default": "standard"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "title": "TestSetGenerationConfig"
      },
      "TestSetGenerationRequest": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TestSetGenerationConfig"
          },
          "samples": {
            "items": {
              "$ref": "#/components/schemas/GenerationSample"
            },
            "type": "array",
            "title": "Samples",
            "default": []
          },
          "synthesizer_type": {
            "type": "string",
            "title": "Synthesizer Type",
            "default": "prompt"
          },
          "num_tests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Tests"
          },
          "batch_size": {
            "type": "integer",
            "title": "Batch Size",
            "default": 20
          },
          "documents": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Document"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents"
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "TestSetGenerationRequest"
      },
      "TestSetGenerationResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "estimated_tests": {
            "type": "integer",
            "title": "Estimated Tests"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "message",
          "estimated_tests"
        ],
        "title": "TestSetGenerationResponse"
      },
      "TestSetLabelBuckets": {
        "properties": {
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "topics": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topics"
          },
          "behaviors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behaviors"
          },
          "sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test_set__SourceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources"
          },
          "total_tests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tests"
          }
        },
        "type": "object",
        "title": "TestSetLabelBuckets",
        "description": "Human-readable label buckets (NOT UUIDs)."
      },
      "TestSetReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestSetReference"
      },
      "TestSetRunCount": {
        "properties": {
          "test_set_name": {
            "type": "string",
            "title": "Test Set Name"
          },
          "run_count": {
            "type": "integer",
            "title": "Run Count"
          }
        },
        "type": "object",
        "required": [
          "test_set_name",
          "run_count"
        ],
        "title": "TestSetRunCount"
      },
      "TestSetUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "short_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Description"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          },
          "license_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Type Id"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetAttributes-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "default": 0
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          }
        },
        "type": "object",
        "title": "TestSetUpdate"
      },
      "TestStats": {
        "properties": {
          "overall_summary": {
            "$ref": "#/components/schemas/TestStatsOverallSummary"
          },
          "metric_breakdown": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Metric Breakdown"
          },
          "recent_runs": {
            "items": {
              "$ref": "#/components/schemas/TestStatsRecentRun"
            },
            "type": "array",
            "title": "Recent Runs"
          },
          "metadata": {
            "$ref": "#/components/schemas/TestStatsMetadata"
          }
        },
        "type": "object",
        "required": [
          "overall_summary",
          "metric_breakdown",
          "recent_runs",
          "metadata"
        ],
        "title": "TestStats",
        "description": "Schema matching get_individual_test_stats(...) output."
      },
      "TestStatsMetadata": {
        "properties": {
          "generated_at": {
            "type": "string",
            "title": "Generated At"
          },
          "test_id": {
            "type": "string",
            "title": "Test Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "period": {
            "type": "string",
            "title": "Period"
          },
          "recent_runs_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recent Runs Limit"
          },
          "available_metrics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available Metrics",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "generated_at",
          "test_id",
          "period"
        ],
        "title": "TestStatsMetadata"
      },
      "TestStatsMetricResult": {
        "properties": {
          "is_successful": {
            "type": "boolean",
            "title": "Is Successful"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "is_successful"
        ],
        "title": "TestStatsMetricResult"
      },
      "TestStatsOverallSummary": {
        "properties": {
          "total_test_runs": {
            "type": "integer",
            "title": "Total Test Runs"
          },
          "total_executions": {
            "type": "integer",
            "title": "Total Executions"
          },
          "passed": {
            "type": "integer",
            "title": "Passed"
          },
          "failed": {
            "type": "integer",
            "title": "Failed"
          },
          "pass_rate": {
            "type": "number",
            "title": "Pass Rate"
          },
          "avg_execution_time_ms": {
            "type": "number",
            "title": "Avg Execution Time Ms"
          }
        },
        "type": "object",
        "required": [
          "total_test_runs",
          "total_executions",
          "passed",
          "failed",
          "pass_rate",
          "avg_execution_time_ms"
        ],
        "title": "TestStatsOverallSummary"
      },
      "TestStatsRecentRun": {
        "properties": {
          "test_run_id": {
            "type": "string",
            "title": "Test Run Id"
          },
          "test_run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "overall_passed": {
            "type": "boolean",
            "title": "Overall Passed"
          },
          "execution_time_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Time Ms"
          },
          "metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TestStatsMetricResult"
            },
            "type": "object",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "test_run_id",
          "overall_passed",
          "metrics"
        ],
        "title": "TestStatsRecentRun"
      },
      "TestUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "prompt_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "test_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Type Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "test_configuration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "test_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestMetadata-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TestUpdate"
      },
      "TextResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TextResponse"
      },
      "ThresholdOperator": {
        "type": "string",
        "enum": [
          "=",
          "<",
          ">",
          "<=",
          ">=",
          "!="
        ],
        "title": "ThresholdOperator"
      },
      "TimelineData": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "overall": {
            "$ref": "#/components/schemas/OverallStats"
          },
          "metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricStats"
            },
            "type": "object",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "date",
          "overall",
          "metrics"
        ],
        "title": "TimelineData"
      },
      "TokenCreateBody": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Display name for this API token"
          },
          "expires_in_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3650.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In Days",
            "description": "Days until expiration (optional)"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TokenCreateBody"
      },
      "TokenCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_obfuscated": {
            "type": "string",
            "title": "Token Obfuscated"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "last_refreshed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Refreshed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "access_token",
          "token_obfuscated",
          "token_type",
          "expires_at",
          "name"
        ],
        "title": "TokenCreateResponse"
      },
      "TokenRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid4",
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "token_obfuscated": {
            "type": "string",
            "title": "Token Obfuscated"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "last_refreshed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Refreshed At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "name",
          "user_id",
          "token_obfuscated",
          "last_used_at",
          "last_refreshed_at"
        ],
        "title": "TokenRead"
      },
      "TokenRefreshBody": {
        "properties": {
          "expires_in_days": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3650.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In Days",
            "description": "Days until new expiration (optional)"
          }
        },
        "type": "object",
        "title": "TokenRefreshBody"
      },
      "TokenUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "token_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Type"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          },
          "token_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Hash"
          },
          "token_obfuscated": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token Obfuscated"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "last_refreshed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Refreshed At"
          }
        },
        "type": "object",
        "title": "TokenUpdate"
      },
      "Topic": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Topic"
      },
      "TopicCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TopicCreate"
      },
      "TopicDetail": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TopicReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "entity_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TopicDetail"
      },
      "TopicReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TopicReference"
      },
      "TopicUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "entity_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Type Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "TopicUpdate"
      },
      "TypeLookup": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "type_name": {
            "type": "string",
            "title": "Type Name"
          },
          "type_value": {
            "type": "string",
            "title": "Type Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "type_name",
          "type_value"
        ],
        "title": "TypeLookup"
      },
      "TypeLookupCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "type_name": {
            "type": "string",
            "title": "Type Name"
          },
          "type_value": {
            "type": "string",
            "title": "Type Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "type_name",
          "type_value"
        ],
        "title": "TypeLookupCreate"
      },
      "TypeLookupReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type Name"
          },
          "type_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type Value"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TypeLookupReference"
      },
      "TypeLookupUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type Name"
          },
          "type_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "TypeLookupUpdate"
      },
      "UseCase": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "industry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industry"
          },
          "application": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "UseCase"
      },
      "UseCaseCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "industry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industry"
          },
          "application": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active",
            "default": true
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "UseCaseCreate"
      },
      "UseCaseReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "UseCaseReference"
      },
      "UseCaseUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "industry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industry"
          },
          "application": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "UseCaseUpdate"
      },
      "User": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "title": "Email",
            "description": "Email address cannot be empty"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          },
          "picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "last_login_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "title": "Email",
            "description": "Email address cannot be empty"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          },
          "picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "last_login_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          },
          "send_invite": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send Invite",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserCreate"
      },
      "UserReference": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "UserReference"
      },
      "UserUpdate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "auth0_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auth0 Id"
          },
          "picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "last_login_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login At"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserUpdateResponse": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "session_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Token"
          }
        },
        "type": "object",
        "required": [
          "user"
        ],
        "title": "UserUpdateResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerifyAuthResponse": {
        "properties": {
          "authenticated": {
            "type": "boolean",
            "title": "Authenticated"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "return_to": {
            "type": "string",
            "title": "Return To"
          }
        },
        "type": "object",
        "required": [
          "authenticated",
          "user",
          "return_to"
        ],
        "title": "VerifyAuthResponse"
      },
      "rhesis__backend__app__schemas__pagination__Paginated_BehaviorDetail___1": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__BehaviorDetail__1"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[BehaviorDetail]"
      },
      "rhesis__backend__app__schemas__pagination__Paginated_BehaviorDetail___2": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__BehaviorDetail__2"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[BehaviorDetail]"
      },
      "rhesis__backend__app__schemas__pagination__Paginated_MetricDetail___1": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__MetricDetail__1"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[MetricDetail]"
      },
      "rhesis__backend__app__schemas__pagination__Paginated_MetricDetail___2": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__MetricDetail__2"
            },
            "type": "array",
            "title": "Data"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "type": "object",
        "required": [
          "data",
          "pagination"
        ],
        "title": "Paginated[MetricDetail]"
      },
      "rhesis__backend__app__schemas__services__Test": {
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/TestPrompt-Output"
          },
          "behavior": {
            "type": "string",
            "title": "Behavior"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "topic": {
            "type": "string",
            "title": "Topic"
          },
          "metadata": {
            "$ref": "#/components/schemas/rhesis__backend__app__schemas__services__TestMetadata"
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "behavior",
          "category",
          "topic",
          "metadata"
        ],
        "title": "Test"
      },
      "rhesis__backend__app__schemas__services__TestMetadata": {
        "properties": {
          "generated_by": {
            "type": "string",
            "title": "Generated By"
          },
          "additional_info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          }
        },
        "type": "object",
        "required": [
          "generated_by"
        ],
        "title": "TestMetadata"
      },
      "rhesis__backend__app__schemas__test__SourceItem": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "document": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "title": "SourceItem"
      },
      "rhesis__backend__app__schemas__test__Test": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "prompt_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Prompt Id"
          },
          "test_set_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Set Id"
          },
          "test_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Type Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "test_configuration": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Json-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Configuration"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "topic_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic Id"
          },
          "behavior_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Behavior Id"
          },
          "category_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "test_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__TestMetadata"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "prompt_id"
        ],
        "title": "Test"
      },
      "rhesis__backend__app__schemas__test__TestMetadata": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "sources": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/rhesis__backend__app__schemas__test__SourceItem"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources"
          }
        },
        "type": "object",
        "title": "TestMetadata"
      },
      "rhesis__backend__app__schemas__test_set__SourceItem": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "document": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "SourceItem"
      },
      "rhesis__backend__app__utils__schema_factory__BehaviorDetail__1": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/MetricReference"
            },
            "type": "array",
            "title": "Metrics",
            "default": []
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "BehaviorDetail"
      },
      "rhesis__backend__app__utils__schema_factory__BehaviorDetail__2": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "BehaviorDetail"
      },
      "rhesis__backend__app__utils__schema_factory__EndpointReference__1": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "EndpointReference"
      },
      "rhesis__backend__app__utils__schema_factory__EndpointReference__2": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "project": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "EndpointReference"
      },
      "rhesis__backend__app__utils__schema_factory__MetricDetail__1": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "evaluation_prompt": {
            "type": "string",
            "title": "Evaluation Prompt"
          },
          "evaluation_steps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Steps"
          },
          "reasoning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning"
          },
          "score_type": {
            "$ref": "#/components/schemas/ScoreType"
          },
          "min_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Score"
          },
          "max_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Score"
          },
          "reference_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Score"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          },
          "threshold_operator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThresholdOperator"
              },
              {
                "type": "null"
              }
            ],
            "default": ">="
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation"
          },
          "metric_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Type Id"
          },
          "backend_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Type Id"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "class_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Class Name"
          },
          "ground_truth_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth Required",
            "default": false
          },
          "context_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Required",
            "default": false
          },
          "evaluation_examples": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Examples"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "backend_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "created_at",
          "updated_at",
          "evaluation_prompt",
          "score_type"
        ],
        "title": "MetricDetail"
      },
      "rhesis__backend__app__utils__schema_factory__MetricDetail__2": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "title": "Updated At"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "evaluation_prompt": {
            "type": "string",
            "title": "Evaluation Prompt"
          },
          "evaluation_steps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Steps"
          },
          "reasoning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reasoning"
          },
          "score_type": {
            "$ref": "#/components/schemas/ScoreType"
          },
          "min_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Score"
          },
          "max_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Score"
          },
          "reference_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Score"
          },
          "threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold"
          },
          "threshold_operator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThresholdOperator"
              },
              {
                "type": "null"
              }
            ],
            "default": ">="
          },
          "explanation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Explanation"
          },
          "metric_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metric Type Id"
          },
          "backend_type_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backend Type Id"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "class_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Class Name"
          },
          "ground_truth_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ground Truth Required",
            "default": false
          },
          "context_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Required",
            "default": false
          },
          "evaluation_examples": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluation Examples"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TagRead"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "counts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountsDict"
              },
              {
                "type": "null"
              }
            ]
          },
          "metric_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "assignee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "backend_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TypeLookupReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "behaviors": {
            "items": {
              "$ref": "#/components/schemas/BehaviorReference"
            },
            "type": "array",
            "title": "Behaviors",
            "default": []
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id",
          "created_at",
          "updated_at",
          "evaluation_prompt",
          "score_type"
        ],
        "title": "MetricDetail"
      },
      "rhesis__backend__app__utils__schema_factory__TestConfigurationReference__1": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "endpoint_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestConfigurationReference"
      },
      "rhesis__backend__app__utils__schema_factory__TestConfigurationReference__2": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "nano_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nano Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "endpoint_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint Id"
          },
          "endpoint": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/rhesis__backend__app__utils__schema_factory__EndpointReference__2"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_set": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestSetReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "nano_id"
        ],
        "title": "TestConfigurationReference"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "internal",
      "description": "Operational/internal endpoints"
    },
    {
      "name": "frontend",
      "description": "Used in frontend"
    }
  ]
}